
bin\Debug\ProjectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800200  00000b7a  00000c2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b7a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080022a  0080022a  00000c58  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000c58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000c5b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c70  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  00000cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000016b4  00000000  00000000  00000d88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 0000110f  00000000  00000000  0000243c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000f02  00000000  00000000  0000354b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  0000028c  00000000  00000000  00004450  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000081b  00000000  00000000  000046dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001cc  00000000  00000000  00004ef7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 00000199  00000000  00000000  000050c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 0000002b  00000000  00000000  0000525c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 ab 03 	jmp	0x756	; 0x756 <__vector_11>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 45 02 	jmp	0x48a	; 0x48a <__vector_23>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__vector_31>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 a9 02 	jmp	0x552	; 0x552 <__vector_33>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	ea e7       	ldi	r30, 0x7A	; 122

000000fc <.Loc.4>:
  fc:	fb e0       	ldi	r31, 0x0B	; 11

000000fe <.Loc.5>:
  fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
 100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
 102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
 104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
 106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
 108:	aa 32       	cpi	r26, 0x2A	; 42

0000010a <.Loc.11>:
 10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
 10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
 110:	aa e2       	ldi	r26, 0x2A	; 42

00000112 <.Loc.2>:
 112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
 114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
 116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
 118:	ac 33       	cpi	r26, 0x3C	; 60

0000011a <.Loc.6>:
 11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
 11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
 11e:	0e 94 2d 01 	call	0x25a	; 0x25a <main>
 122:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <initIRSensors>:

    return 0;
}

void initIRSensors(){
    DDRA &= ~((1<<FrontIRSensorLeftPin) | (1<<FrontIRSensorRightPin));
 12a:	81 b1       	in	r24, 0x01	; 1
 12c:	8c 7f       	andi	r24, 0xFC	; 252
 12e:	81 b9       	out	0x01, r24	; 1

00000130 <.Loc.3>:
    PORTA |- (1<<FrontIRSensorLeftPin) | (1<<FrontIRSensorRightPin);
 130:	82 b1       	in	r24, 0x02	; 2

00000132 <.Loc.4>:
}
 132:	08 95       	ret

00000134 <initAGV>:
    agv_ultrasoon_init();
 134:	0e 94 7f 02 	call	0x4fe	; 0x4fe <agv_ultrasoon_init>

00000138 <.LVL0>:
    initSteppermotorAVRDriver();
 138:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <initSteppermotorAVRDriver>

0000013c <.LVL1>:
    initIRSensors();
 13c:	0e 94 95 00 	call	0x12a	; 0x12a <initIRSensors>

00000140 <.LVL2>:
}
 140:	08 95       	ret

00000142 <checkFrontIRState>:

int checkFrontIRState(){
    if(bit_is_clear(PINA, FrontIRSensorLeftPin) && bit_is_clear(PINA, FrontIRSensorRightPin)){
 142:	00 99       	sbic	0x00, 0	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <.L4>

00000146 <.Loc.13>:
 146:	01 9b       	sbis	0x00, 1	; 0
 148:	07 c0       	rjmp	.+14     	; 0x158 <.L6>

0000014a <.L4>:
        return 0;
    }

    if(bit_is_clear(PINA, FrontIRSensorLeftPin)){
 14a:	00 9b       	sbis	0x00, 0	; 0
 14c:	08 c0       	rjmp	.+16     	; 0x15e <.L7>

0000014e <.Loc.16>:
        return 1;
    }

    if(bit_is_clear(PINA, FrontIRSensorRightPin)){
 14e:	01 9b       	sbis	0x00, 1	; 0
 150:	09 c0       	rjmp	.+18     	; 0x164 <.L8>

00000152 <.Loc.18>:
        return 2;
    }

    return 3;
 152:	83 e0       	ldi	r24, 0x03	; 3
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	08 95       	ret

00000158 <.L6>:
        return 0;
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	08 95       	ret

0000015e <.L7>:
        return 1;
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	08 95       	ret

00000164 <.L8>:
        return 2;
 164:	82 e0       	ldi	r24, 0x02	; 2
 166:	90 e0       	ldi	r25, 0x00	; 0

00000168 <.Loc.22>:
}
 168:	08 95       	ret

0000016a <filterDistance>:

    return 3;

}

int filterDistance(int distance){
 16a:	28 2f       	mov	r18, r24
 16c:	39 2f       	mov	r19, r25

0000016e <.Loc.25>:
    //Alle waardes boven 200 zijn bs anyways
    if(distance == 561){
 16e:	21 33       	cpi	r18, 0x31	; 49
 170:	82 e0       	ldi	r24, 0x02	; 2
 172:	38 07       	cpc	r19, r24

00000174 <.Loc.27>:
 174:	31 f0       	breq	.+12     	; 0x182 <.L11>

00000176 <.Loc.28>:
        distance = 1;
    } else if(distance > 500){
 176:	25 3f       	cpi	r18, 0xF5	; 245
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	38 07       	cpc	r19, r24
 17c:	2c f4       	brge	.+10     	; 0x188 <.L12>
 17e:	82 2f       	mov	r24, r18
 180:	08 95       	ret

00000182 <.L11>:
        distance = 1;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	08 95       	ret

00000188 <.L12>:
        distance = 100;
 188:	84 e6       	ldi	r24, 0x64	; 100
 18a:	90 e0       	ldi	r25, 0x00	; 0

0000018c <.Loc.32>:
    }
    return distance;
}
 18c:	08 95       	ret

0000018e <checkSensors>:
    if(maxDistance > filterDistance(agv_ultrasoon_voor_midden)){
 18e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <agv_ultrasoon_voor_midden>
 192:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <agv_ultrasoon_voor_midden+0x1>
 196:	0e 94 b5 00 	call	0x16a	; 0x16a <filterDistance>

0000019a <.LVL6>:
 19a:	0e 97       	sbiw	r24, 0x0e	; 14
 19c:	0c f4       	brge	.+2      	; 0x1a0 <.LBB9>

0000019e <L0^A>:
 19e:	57 c0       	rjmp	.+174    	; 0x24e <.L20>

000001a0 <.LBB9>:
    if((TreeDistance > filterDistance(agv_ultrasoon_boom_links)) && !leftPreviousState){
 1a0:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <agv_ultrasoon_boom_links>
 1a4:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <agv_ultrasoon_boom_links+0x1>
 1a8:	0e 94 b5 00 	call	0x16a	; 0x16a <filterDistance>

000001ac <.LVL7>:
 1ac:	0a 97       	sbiw	r24, 0x0a	; 10
 1ae:	d4 f4       	brge	.+52     	; 0x1e4 <.L15>

000001b0 <.Loc.43>:
 1b0:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <leftPreviousState.1>
 1b4:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <leftPreviousState.1+0x1>
 1b8:	89 2b       	or	r24, r25
 1ba:	69 f0       	breq	.+26     	; 0x1d6 <.L23>

000001bc <.L16>:
    } else if(leftPreviousState && (TreeDistance < filterDistance(agv_ultrasoon_boom_links)) ){
 1bc:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <agv_ultrasoon_boom_links>
 1c0:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <agv_ultrasoon_boom_links+0x1>
 1c4:	0e 94 b5 00 	call	0x16a	; 0x16a <filterDistance>

000001c8 <.LVL8>:
 1c8:	0b 97       	sbiw	r24, 0x0b	; 11
 1ca:	94 f0       	brlt	.+36     	; 0x1f0 <.L17>

000001cc <.Loc.46>:
        leftPreviousState = 0;
 1cc:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <leftPreviousState.1+0x1>
 1d0:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <leftPreviousState.1>
 1d4:	0d c0       	rjmp	.+26     	; 0x1f0 <.L17>

000001d6 <.L23>:
        leftPreviousState = 1;
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <leftPreviousState.1+0x1>
 1de:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <leftPreviousState.1>

000001e2 <.Loc.50>:
        return 1;
 1e2:	08 95       	ret

000001e4 <.L15>:
    } else if(leftPreviousState && (TreeDistance < filterDistance(agv_ultrasoon_boom_links)) ){
 1e4:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <leftPreviousState.1>
 1e8:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <leftPreviousState.1+0x1>
 1ec:	89 2b       	or	r24, r25
 1ee:	31 f7       	brne	.-52     	; 0x1bc <.L16>

000001f0 <.L17>:
    if((TreeDistance > filterDistance(agv_ultrasoon_boom_rechts)) && !rightPreviousState){
 1f0:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <agv_ultrasoon_boom_rechts>
 1f4:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <agv_ultrasoon_boom_rechts+0x1>
 1f8:	0e 94 b5 00 	call	0x16a	; 0x16a <filterDistance>

000001fc <.LVL9>:
 1fc:	0a 97       	sbiw	r24, 0x0a	; 10
 1fe:	f4 f4       	brge	.+60     	; 0x23c <.L18>

00000200 <.Loc.57>:
 200:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <rightPreviousState.0>
 204:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <rightPreviousState.0+0x1>
 208:	89 2b       	or	r24, r25
 20a:	79 f0       	breq	.+30     	; 0x22a <.L24>

0000020c <.L19>:
    } else if(rightPreviousState && (TreeDistance < filterDistance(agv_ultrasoon_boom_rechts)) ){
 20c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <agv_ultrasoon_boom_rechts>
 210:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <agv_ultrasoon_boom_rechts+0x1>
 214:	0e 94 b5 00 	call	0x16a	; 0x16a <filterDistance>

00000218 <.LVL10>:
 218:	0b 97       	sbiw	r24, 0x0b	; 11
 21a:	e4 f0       	brlt	.+56     	; 0x254 <.L22>

0000021c <.Loc.60>:
        rightPreviousState = 0;
 21c:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <rightPreviousState.0+0x1>
 220:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <rightPreviousState.0>

00000224 <.Loc.62>:
    return 3;
 224:	83 e0       	ldi	r24, 0x03	; 3
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	08 95       	ret

0000022a <.L24>:
        rightPreviousState = 1;
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <rightPreviousState.0+0x1>
 232:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <rightPreviousState.0>

00000236 <.Loc.65>:
        return 2;
 236:	82 e0       	ldi	r24, 0x02	; 2
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	08 95       	ret

0000023c <.L18>:
    } else if(rightPreviousState && (TreeDistance < filterDistance(agv_ultrasoon_boom_rechts)) ){
 23c:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <rightPreviousState.0>
 240:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <rightPreviousState.0+0x1>
 244:	89 2b       	or	r24, r25
 246:	11 f7       	brne	.-60     	; 0x20c <.L19>

00000248 <.Loc.69>:
    return 3;
 248:	83 e0       	ldi	r24, 0x03	; 3
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	08 95       	ret

0000024e <.L20>:
        return 0;
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	08 95       	ret

00000254 <.L22>:
    return 3;
 254:	83 e0       	ldi	r24, 0x03	; 3
 256:	90 e0       	ldi	r25, 0x00	; 0

00000258 <.Loc.72>:
}
 258:	08 95       	ret

0000025a <main>:
    initAGV();
 25a:	0e 94 9a 00 	call	0x134	; 0x134 <initAGV>

0000025e <.LVL12>:
 25e:	0c c0       	rjmp	.+24     	; 0x278 <.L34>

00000260 <.L28>:
 260:	23 30       	cpi	r18, 0x03	; 3
 262:	31 05       	cpc	r19, r1
 264:	49 f4       	brne	.+18     	; 0x278 <.L34>

00000266 <.Loc.78>:
                        setBothStepperMode(ForwardStep);
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

0000026e <.LVL14>:
                        break;
 26e:	04 c0       	rjmp	.+8      	; 0x278 <.L34>

00000270 <.L29>:
                        setBothStepperMode(Off);
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

00000278 <.L34>:
                int WorldState = checkSensors();
 278:	0e 94 c7 00 	call	0x18e	; 0x18e <checkSensors>

0000027c <.LVL17>:
 27c:	28 2f       	mov	r18, r24
 27e:	39 2f       	mov	r19, r25

00000280 <.Loc.87>:
                switch(WorldState){
 280:	22 30       	cpi	r18, 0x02	; 2
 282:	31 05       	cpc	r19, r1
 284:	a9 f0       	breq	.+42     	; 0x2b0 <.L27>
 286:	64 f7       	brge	.-40     	; 0x260 <.L28>
 288:	21 15       	cp	r18, r1
 28a:	31 05       	cpc	r19, r1
 28c:	89 f3       	breq	.-30     	; 0x270 <.L29>
 28e:	21 30       	cpi	r18, 0x01	; 1
 290:	31 05       	cpc	r19, r1
 292:	91 f7       	brne	.-28     	; 0x278 <.L34>

00000294 <.Loc.88>:
                        setBothStepperMode(Off);
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

0000029c <.LBB14>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29c:	2f ef       	ldi	r18, 0xFF	; 255
 29e:	83 ed       	ldi	r24, 0xD3	; 211
 2a0:	90 e3       	ldi	r25, 0x30	; 48

000002a2 <.L1^B1>:
 2a2:	21 50       	subi	r18, 0x01	; 1
 2a4:	80 40       	sbci	r24, 0x00	; 0
 2a6:	90 40       	sbci	r25, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <.L1^B1>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <L0^A>

000002ac <L0^A>:
	...

000002ae <.Loc.97>:
	}
	else
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
#endif
}
 2ae:	e4 cf       	rjmp	.-56     	; 0x278 <.L34>

000002b0 <.L27>:
                        setBothStepperMode(Off);
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

000002b8 <.LBB16>:
	__builtin_avr_delay_cycles(__ticks_dc);
 2b8:	2f ef       	ldi	r18, 0xFF	; 255
 2ba:	83 ed       	ldi	r24, 0xD3	; 211
 2bc:	90 e3       	ldi	r25, 0x30	; 48

000002be <.L1^B2>:
 2be:	21 50       	subi	r18, 0x01	; 1
 2c0:	80 40       	sbci	r24, 0x00	; 0
 2c2:	90 40       	sbci	r25, 0x00	; 0
 2c4:	e1 f7       	brne	.-8      	; 0x2be <.L1^B2>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <L0^A>

000002c8 <L0^A>:
	...

000002ca <.Loc.108>:
}
 2ca:	d6 cf       	rjmp	.-84     	; 0x278 <.L34>

000002cc <followHand>:

void followHand(int distance){
 2cc:	28 2f       	mov	r18, r24
 2ce:	39 2f       	mov	r19, r25

000002d0 <.Loc.111>:

    //Check voor als er iets TE ver weg staat en te negeren.
    if(distance > distanceToCheck){
 2d0:	23 33       	cpi	r18, 0x33	; 51
 2d2:	31 05       	cpc	r19, r1
 2d4:	5c f4       	brge	.+22     	; 0x2ec <.L40>

000002d6 <.Loc.113>:
        setBothStepperMode(Off);
        return;
    }

    //Check voor juiste afstand
    if((distance < maxDistance) && (distance > minDistance)){
 2d6:	c9 01       	movw	r24, r18

000002d8 <.Loc.115>:
 2d8:	0b 97       	sbiw	r24, 0x0b	; 11

000002da <.Loc.116>:
 2da:	03 97       	sbiw	r24, 0x03	; 3
 2dc:	60 f0       	brcs	.+24     	; 0x2f6 <.L41>

000002de <.Loc.117>:
            setBothStepperMode(Off);
            return;
    }

    //Check voor dichtbij
    if(distance < minDistance){
 2de:	2a 30       	cpi	r18, 0x0A	; 10
 2e0:	31 05       	cpc	r19, r1
 2e2:	74 f0       	brlt	.+28     	; 0x300 <.L42>

000002e4 <.Loc.119>:
        setBothStepperMode(BackwardStep);
        return;
    }

    //check voor verweg
    if(distance > maxDistance){
 2e4:	2f 30       	cpi	r18, 0x0F	; 15
 2e6:	31 05       	cpc	r19, r1
 2e8:	84 f4       	brge	.+32     	; 0x30a <.L43>

000002ea <.L35>:
        setBothStepperMode(ForwardStep);
    }

}
 2ea:	08 95       	ret

000002ec <.L40>:
        setBothStepperMode(Off);
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0

000002f0 <.Loc.123>:
 2f0:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

000002f4 <.LVL26>:
        return;
 2f4:	08 95       	ret

000002f6 <.L41>:
            setBothStepperMode(Off);
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

000002fe <.LVL27>:
            return;
 2fe:	08 95       	ret

00000300 <.L42>:
        setBothStepperMode(BackwardStep);
 300:	82 e0       	ldi	r24, 0x02	; 2
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

00000308 <.LVL28>:
        return;
 308:	08 95       	ret

0000030a <.L43>:
        setBothStepperMode(ForwardStep);
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	0e 94 c3 01 	call	0x386	; 0x386 <setBothStepperMode>

00000312 <.LVL29>:
 312:	eb cf       	rjmp	.-42     	; 0x2ea <.L35>

00000314 <init_delay_timer>:

void init_delay_timer(){
    // Use mode 0, clkdiv = 64
    TCCR2A = 0;
 314:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>

00000318 <.Loc.133>:
    TCCR2B = (0<<CS22) | (1<<CS21) | (1<<CS20);
 318:	83 e0       	ldi	r24, 0x03	; 3
 31a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>

0000031e <.Loc.135>:

    // Disable PWM output
    OCR2A = 0;
 31e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

00000322 <.Loc.137>:
    OCR2B = 0;
 322:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

00000326 <.Loc.139>:

    //Overflow interrupt
    TIMSK2 = (1<<TOIE2);
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>

0000032c <.Loc.141>:
    TCNT2 = 6;
 32c:	86 e0       	ldi	r24, 0x06	; 6
 32e:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>

00000332 <.Loc.143>:
}
 332:	08 95       	ret

00000334 <setStepperMode>:
void setBothStepperMode(int mode){
    setStepperMode(leftMotor, mode);
    setStepperMode(rightMotor, mode);
}

void setStepperMode(int motor, int mode){
 334:	28 2f       	mov	r18, r24
 336:	39 2f       	mov	r19, r25
 338:	86 2f       	mov	r24, r22

0000033a <.Loc.2>:
 33a:	97 2f       	mov	r25, r23

0000033c <.Loc.3>:

    int state;
    if(mode == Off){
 33c:	51 e0       	ldi	r21, 0x01	; 1
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	81 30       	cpi	r24, 0x01	; 1
 342:	91 05       	cpc	r25, r1
 344:	69 f0       	breq	.+26     	; 0x360 <.L8>

00000346 <.L2>:
        state = 1;
    }


    int** motorLoop;
    switch(motor){
 346:	2a 30       	cpi	r18, 0x0A	; 10
 348:	31 05       	cpc	r19, r1
 34a:	61 f0       	breq	.+24     	; 0x364 <.L3>
 34c:	2b 30       	cpi	r18, 0x0B	; 11
 34e:	31 05       	cpc	r19, r1
 350:	81 f0       	breq	.+32     	; 0x372 <.L4>

00000352 <.L5>:
            motorLoop = &rightMotorLoop;
            rightMotorEnabled = state;
            break;
    }

    switch(mode){
 352:	02 97       	sbiw	r24, 0x02	; 2
 354:	a9 f0       	breq	.+42     	; 0x380 <.L9>
 356:	88 e1       	ldi	r24, 0x18	; 24
 358:	92 e0       	ldi	r25, 0x02	; 2

0000035a <.L6>:
        default:
        case ForwardStep:
            *motorLoop = &LoopForward;
 35a:	91 83       	std	Z+1, r25	; 0x01
 35c:	80 83       	st	Z, r24

0000035e <.Loc.10>:
            break;
        case BackwardStep:
            *motorLoop = &LoopBackwards;
            break;
    }
}
 35e:	08 95       	ret

00000360 <.L8>:
    if(mode == Off){
 360:	50 e0       	ldi	r21, 0x00	; 0
 362:	f1 cf       	rjmp	.-30     	; 0x346 <.L2>

00000364 <.L3>:
            leftMotorEnabled = state;
 364:	50 93 02 02 	sts	0x0202, r21	; 0x800202 <leftMotorEnabled>
 368:	40 93 03 02 	sts	0x0203, r20	; 0x800203 <leftMotorEnabled+0x1>

0000036c <.Loc.15>:
            motorLoop = &leftMotorLoop;
 36c:	e6 e0       	ldi	r30, 0x06	; 6
 36e:	f2 e0       	ldi	r31, 0x02	; 2

00000370 <.Loc.17>:
            break;
 370:	f0 cf       	rjmp	.-32     	; 0x352 <.L5>

00000372 <.L4>:
            rightMotorEnabled = state;
 372:	50 93 00 02 	sts	0x0200, r21	; 0x800200 <rightMotorEnabled>
 376:	40 93 01 02 	sts	0x0201, r20	; 0x800201 <rightMotorEnabled+0x1>

0000037a <.Loc.21>:
            motorLoop = &rightMotorLoop;
 37a:	e4 e0       	ldi	r30, 0x04	; 4
 37c:	f2 e0       	ldi	r31, 0x02	; 2

0000037e <.Loc.23>:
            break;
 37e:	e9 cf       	rjmp	.-46     	; 0x352 <.L5>

00000380 <.L9>:
    switch(mode){
 380:	88 e0       	ldi	r24, 0x08	; 8
 382:	92 e0       	ldi	r25, 0x02	; 2
 384:	ea cf       	rjmp	.-44     	; 0x35a <.L6>

00000386 <setBothStepperMode>:
void setBothStepperMode(int mode){
 386:	cf 93       	push	r28
 388:	df 93       	push	r29
 38a:	d8 2f       	mov	r29, r24
 38c:	c9 2f       	mov	r28, r25

0000038e <.Loc.27>:
    setStepperMode(leftMotor, mode);
 38e:	68 2f       	mov	r22, r24
 390:	79 2f       	mov	r23, r25
 392:	8a e0       	ldi	r24, 0x0A	; 10
 394:	90 e0       	ldi	r25, 0x00	; 0

00000396 <.Loc.28>:
 396:	0e 94 9a 01 	call	0x334	; 0x334 <setStepperMode>

0000039a <.LVL10>:
    setStepperMode(rightMotor, mode);
 39a:	6d 2f       	mov	r22, r29
 39c:	7c 2f       	mov	r23, r28
 39e:	8b e0       	ldi	r24, 0x0B	; 11
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 9a 01 	call	0x334	; 0x334 <setStepperMode>

000003a6 <.LVL11>:
}
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	08 95       	ret

000003ac <init_timer>:

//Clockspeed = 16.000.000 / 250 / 64 = 1.000
#define Clockspeed 1000
void init_timer(){
    // Use mode 0, clkdiv = 64
    TCCR0A = 0;
 3ac:	14 bc       	out	0x24, r1	; 36

000003ae <.Loc.34>:
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
 3ae:	83 e0       	ldi	r24, 0x03	; 3
 3b0:	85 bd       	out	0x25, r24	; 37

000003b2 <.Loc.36>:

    // Disable PWM output
    OCR0A = 0;
 3b2:	17 bc       	out	0x27, r1	; 39

000003b4 <.Loc.38>:
    OCR0B = 0;
 3b4:	18 bc       	out	0x28, r1	; 40

000003b6 <.Loc.40>:

    //Overflow interrupt
    TIMSK0 = (1<<TOIE0);
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>

000003bc <.Loc.42>:
    TCNT0 = 6;
 3bc:	86 e0       	ldi	r24, 0x06	; 6
 3be:	86 bd       	out	0x26, r24	; 38

000003c0 <.Loc.44>:

    sei();
 3c0:	78 94       	sei

000003c2 <.Loc.45>:
}
 3c2:	08 95       	ret

000003c4 <initMotorpins>:
}


void initMotorpins(){
    for(int i = MotorLeftStartpin; i < MotorLeftStartpin+4; i++){
        MotorLeftDDR |= (1<<i);
 3c4:	80 9a       	sbi	0x10, 0	; 16

000003c6 <.Loc.52>:
 3c6:	81 9a       	sbi	0x10, 1	; 16

000003c8 <.Loc.56>:
 3c8:	82 9a       	sbi	0x10, 2	; 16

000003ca <.Loc.60>:
 3ca:	83 9a       	sbi	0x10, 3	; 16

000003cc <.LBB3>:
    }

    for(int i = MotorRightStartpin; i < MotorRightStartpin+4; i++){
        MotorRightDDR |= (1<<i);
 3cc:	84 9a       	sbi	0x10, 4	; 16

000003ce <.Loc.69>:
 3ce:	85 9a       	sbi	0x10, 5	; 16

000003d0 <.Loc.73>:
 3d0:	86 9a       	sbi	0x10, 6	; 16

000003d2 <.Loc.77>:
 3d2:	87 9a       	sbi	0x10, 7	; 16

000003d4 <.LBE3>:
    }
}
 3d4:	08 95       	ret

000003d6 <initSteppermotorAVRDriver>:
    initMotorpins();
 3d6:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <initMotorpins>

000003da <.LVL21>:
    setStepperMode(leftMotor, ForwardStep);
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	8a e0       	ldi	r24, 0x0A	; 10
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 9a 01 	call	0x334	; 0x334 <setStepperMode>

000003e6 <.LVL22>:
    init_timer();
 3e6:	0e 94 d6 01 	call	0x3ac	; 0x3ac <init_timer>

000003ea <.LVL23>:
}
 3ea:	08 95       	ret

000003ec <LeftStepperNextStep>:

void LeftStepperNextStep(){
    static int position = 0;
    MotorLeftPort &= ~(0b1111<< MotorLeftStartpin);
 3ec:	81 b3       	in	r24, 0x11	; 17
 3ee:	80 7f       	andi	r24, 0xF0	; 240
 3f0:	81 bb       	out	0x11, r24	; 17

000003f2 <.Loc.93>:
    MotorLeftPort |= ((*leftMotorLoop)[position] << MotorLeftStartpin);
 3f2:	81 b3       	in	r24, 0x11	; 17

000003f4 <.Loc.94>:
 3f4:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <leftMotorLoop>
 3f8:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <leftMotorLoop+0x1>
 3fc:	20 91 34 02 	lds	r18, 0x0234	; 0x800234 <position.1>
 400:	30 91 35 02 	lds	r19, 0x0235	; 0x800235 <position.1+0x1>
 404:	22 0f       	add	r18, r18
 406:	33 1f       	adc	r19, r19
 408:	e2 0f       	add	r30, r18
 40a:	f3 1f       	adc	r31, r19

0000040c <.Loc.95>:
 40c:	90 81       	ld	r25, Z
 40e:	89 2b       	or	r24, r25
 410:	81 bb       	out	0x11, r24	; 17

00000412 <.Loc.96>:
    position++;
 412:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <position.1>
 416:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <position.1+0x1>
 41a:	9c 01       	movw	r18, r24
 41c:	2f 5f       	subi	r18, 0xFF	; 255
 41e:	3f 4f       	sbci	r19, 0xFF	; 255

00000420 <.Loc.98>:
    if(position == LoopLength) position = 0;
 420:	07 97       	sbiw	r24, 0x07	; 7
 422:	29 f0       	breq	.+10     	; 0x42e <.L17>

00000424 <.L15>:
    position++;
 424:	30 93 35 02 	sts	0x0235, r19	; 0x800235 <position.1+0x1>
 428:	20 93 34 02 	sts	0x0234, r18	; 0x800234 <position.1>

0000042c <.Loc.101>:
}
 42c:	08 95       	ret

0000042e <.L17>:
 42e:	20 e0       	ldi	r18, 0x00	; 0
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	f8 cf       	rjmp	.-16     	; 0x424 <.L15>

00000434 <RightStepperNextStep>:

void RightStepperNextStep(){
    static int position = 0;
    MotorRightPort &= ~(0b1111<<MotorRightStartpin);
 434:	81 b3       	in	r24, 0x11	; 17
 436:	8f 70       	andi	r24, 0x0F	; 15
 438:	81 bb       	out	0x11, r24	; 17

0000043a <.Loc.106>:
    MotorRightPort |= ((*rightMotorLoop)[position] << MotorRightStartpin);
 43a:	81 b3       	in	r24, 0x11	; 17

0000043c <.Loc.107>:
 43c:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <rightMotorLoop>
 440:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <rightMotorLoop+0x1>
 444:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <position.0>
 448:	30 91 33 02 	lds	r19, 0x0233	; 0x800233 <position.0+0x1>
 44c:	22 0f       	add	r18, r18
 44e:	33 1f       	adc	r19, r19
 450:	e2 0f       	add	r30, r18
 452:	f3 1f       	adc	r31, r19

00000454 <.Loc.108>:
 454:	20 81       	ld	r18, Z
 456:	31 81       	ldd	r19, Z+1	; 0x01
 458:	22 95       	swap	r18
 45a:	32 95       	swap	r19
 45c:	30 7f       	andi	r19, 0xF0	; 240
 45e:	32 27       	eor	r19, r18
 460:	20 7f       	andi	r18, 0xF0	; 240
 462:	32 27       	eor	r19, r18

00000464 <.Loc.109>:
 464:	82 2b       	or	r24, r18
 466:	81 bb       	out	0x11, r24	; 17

00000468 <.Loc.110>:
    position++;
 468:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <position.0>
 46c:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <position.0+0x1>
 470:	9c 01       	movw	r18, r24
 472:	2f 5f       	subi	r18, 0xFF	; 255
 474:	3f 4f       	sbci	r19, 0xFF	; 255

00000476 <.Loc.112>:
    if(position == LoopLength) position = 0;
 476:	07 97       	sbiw	r24, 0x07	; 7
 478:	29 f0       	breq	.+10     	; 0x484 <.L21>

0000047a <.L19>:
    position++;
 47a:	30 93 33 02 	sts	0x0233, r19	; 0x800233 <position.0+0x1>
 47e:	20 93 32 02 	sts	0x0232, r18	; 0x800232 <position.0>

00000482 <.Loc.115>:
}
 482:	08 95       	ret

00000484 <.L21>:
 484:	20 e0       	ldi	r18, 0x00	; 0
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	f8 cf       	rjmp	.-16     	; 0x47a <.L19>

0000048a <__vector_23>:


ISR(TIMER0_OVF_vect){
 48a:	1f 92       	push	r1
 48c:	0f 92       	push	r0
 48e:	0f b6       	in	r0, 0x3f	; 63
 490:	0f 92       	push	r0
 492:	11 24       	eor	r1, r1
 494:	0b b6       	in	r0, 0x3b	; 59
 496:	0f 92       	push	r0
 498:	2f 93       	push	r18
 49a:	3f 93       	push	r19
 49c:	4f 93       	push	r20
 49e:	5f 93       	push	r21
 4a0:	6f 93       	push	r22
 4a2:	7f 93       	push	r23
 4a4:	8f 93       	push	r24
 4a6:	9f 93       	push	r25
 4a8:	af 93       	push	r26
 4aa:	bf 93       	push	r27
 4ac:	ef 93       	push	r30
 4ae:	ff 93       	push	r31

000004b0 <.Loc.117>:
    if(leftMotorEnabled) LeftStepperNextStep();
 4b0:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <leftMotorEnabled>
 4b4:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <leftMotorEnabled+0x1>
 4b8:	89 2b       	or	r24, r25
 4ba:	d9 f4       	brne	.+54     	; 0x4f2 <.L25>

000004bc <.L23>:
    if(rightMotorEnabled) RightStepperNextStep();
 4bc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <rightMotorEnabled>
 4c0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <rightMotorEnabled+0x1>
 4c4:	89 2b       	or	r24, r25
 4c6:	c1 f4       	brne	.+48     	; 0x4f8 <.L26>

000004c8 <.L24>:

    TCNT0 = 6;
 4c8:	86 e0       	ldi	r24, 0x06	; 6
 4ca:	86 bd       	out	0x26, r24	; 38

000004cc <.Loc.123>:
}
 4cc:	ff 91       	pop	r31
 4ce:	ef 91       	pop	r30
 4d0:	bf 91       	pop	r27
 4d2:	af 91       	pop	r26
 4d4:	9f 91       	pop	r25
 4d6:	8f 91       	pop	r24
 4d8:	7f 91       	pop	r23
 4da:	6f 91       	pop	r22
 4dc:	5f 91       	pop	r21
 4de:	4f 91       	pop	r20
 4e0:	3f 91       	pop	r19
 4e2:	2f 91       	pop	r18
 4e4:	0f 90       	pop	r0
 4e6:	0b be       	out	0x3b, r0	; 59
 4e8:	0f 90       	pop	r0
 4ea:	0f be       	out	0x3f, r0	; 63
 4ec:	0f 90       	pop	r0
 4ee:	1f 90       	pop	r1
 4f0:	18 95       	reti

000004f2 <.L25>:
    if(leftMotorEnabled) LeftStepperNextStep();
 4f2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LeftStepperNextStep>

000004f6 <.LVL24>:
 4f6:	e2 cf       	rjmp	.-60     	; 0x4bc <.L23>

000004f8 <.L26>:
    if(rightMotorEnabled) RightStepperNextStep();
 4f8:	0e 94 1a 02 	call	0x434	; 0x434 <RightStepperNextStep>

000004fc <.LVL25>:
 4fc:	e5 cf       	rjmp	.-54     	; 0x4c8 <.L24>

000004fe <agv_ultrasoon_init>:
volatile uint16_t agv_ultrasoon_voor_midden = 0; //pin A12
volatile uint8_t agv_ultrasoon_current_sensor = 2;

void agv_ultrasoon_init()
{
    cli();
 4fe:	f8 94       	cli

00000500 <.Loc.2>:
    TCCR3A |= (1<<COM3A1) | (1<<WGM31);
 500:	e0 e9       	ldi	r30, 0x90	; 144
 502:	f0 e0       	ldi	r31, 0x00	; 0
 504:	80 81       	ld	r24, Z

00000506 <.Loc.3>:
 506:	82 68       	ori	r24, 0x82	; 130
 508:	80 83       	st	Z, r24

0000050a <.Loc.4>:
    TCCR3B |= (1<<WGM33) | (1<<CS31) | (1<<WGM32);//wgm33 wgm32 wgm31
 50a:	e1 e9       	ldi	r30, 0x91	; 145
 50c:	f0 e0       	ldi	r31, 0x00	; 0
 50e:	80 81       	ld	r24, Z

00000510 <.Loc.5>:
 510:	8a 61       	ori	r24, 0x1A	; 26
 512:	80 83       	st	Z, r24

00000514 <.Loc.6>:
    ICR3 = 32768;
 514:	80 e0       	ldi	r24, 0x00	; 0
 516:	90 e8       	ldi	r25, 0x80	; 128
 518:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
 51c:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

00000520 <.Loc.8>:
    OCR3A = 20;//10microsec
 520:	84 e1       	ldi	r24, 0x14	; 20
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 528:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>

0000052c <.Loc.10>:
    OCR3B = 5500;// (10microsec + 480microsec+ marge) *2
 52c:	8c e7       	ldi	r24, 0x7C	; 124
 52e:	95 e1       	ldi	r25, 0x15	; 21
 530:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
 534:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>

00000538 <.Loc.12>:
    DDRE |= (1<<PE3);
 538:	6b 9a       	sbi	0x0d, 3	; 13

0000053a <.Loc.14>:
    TIMSK3 |= (1<<ICIE3) | (1<<OCIE3B);
 53a:	e1 e7       	ldi	r30, 0x71	; 113
 53c:	f0 e0       	ldi	r31, 0x00	; 0
 53e:	80 81       	ld	r24, Z

00000540 <.Loc.15>:
 540:	84 62       	ori	r24, 0x24	; 36
 542:	80 83       	st	Z, r24

00000544 <.Loc.16>:
    //pin change interrupt:
    PCICR |= (1<<PCIE2);//enables pci 16 tot 23
 544:	e8 e6       	ldi	r30, 0x68	; 104
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	80 81       	ld	r24, Z

0000054a <.Loc.17>:
 54a:	84 60       	ori	r24, 0x04	; 4
 54c:	80 83       	st	Z, r24

0000054e <.Loc.18>:
    sei();
 54e:	78 94       	sei

00000550 <.Loc.19>:
}
 550:	08 95       	ret

00000552 <__vector_33>:

ISR(TIMER3_COMPB_vect)
{
 552:	8f 93       	push	r24
 554:	8f b7       	in	r24, 0x3f	; 63
 556:	8f 93       	push	r24
 558:	8b b7       	in	r24, 0x3b	; 59
 55a:	8f 93       	push	r24
 55c:	ef 93       	push	r30
 55e:	ff 93       	push	r31

00000560 <.Loc.21>:
    agv_ultrasoon_current_sensor = (agv_ultrasoon_current_sensor<<1);
 560:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>
 564:	88 0f       	add	r24, r24

00000566 <.Loc.23>:
 566:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <agv_ultrasoon_current_sensor>

0000056a <.Loc.24>:
    if (agv_ultrasoon_current_sensor == (1<<6))//0b00100000
 56a:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

0000056e <.Loc.26>:
 56e:	80 34       	cpi	r24, 0x40	; 64
 570:	89 f0       	breq	.+34     	; 0x594 <.L4>

00000572 <.L3>:
    {
        agv_ultrasoon_current_sensor = 2;

    }
    PCMSK2 = agv_ultrasoon_current_sensor;
 572:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>
 576:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x70006d>

0000057a <.Loc.29>:
    //PORTA = agv_ultrasoon_current_sensor;
    TIMSK3 |= (1<<OCIE3B);
 57a:	e1 e7       	ldi	r30, 0x71	; 113
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	80 81       	ld	r24, Z

00000580 <.Loc.30>:
 580:	84 60       	ori	r24, 0x04	; 4
 582:	80 83       	st	Z, r24

00000584 <.Loc.31>:
}
 584:	ff 91       	pop	r31
 586:	ef 91       	pop	r30
 588:	8f 91       	pop	r24
 58a:	8b bf       	out	0x3b, r24	; 59
 58c:	8f 91       	pop	r24
 58e:	8f bf       	out	0x3f, r24	; 63
 590:	8f 91       	pop	r24
 592:	18 95       	reti

00000594 <.L4>:
        agv_ultrasoon_current_sensor = 2;
 594:	82 e0       	ldi	r24, 0x02	; 2
 596:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <agv_ultrasoon_current_sensor>
 59a:	eb cf       	rjmp	.-42     	; 0x572 <.L3>

0000059c <__vector_31>:

ISR(TIMER3_CAPT_vect)
{
 59c:	1f 92       	push	r1
 59e:	0f 92       	push	r0
 5a0:	0f b6       	in	r0, 0x3f	; 63
 5a2:	0f 92       	push	r0
 5a4:	11 24       	eor	r1, r1
 5a6:	0b b6       	in	r0, 0x3b	; 59
 5a8:	0f 92       	push	r0
 5aa:	2f 93       	push	r18
 5ac:	3f 93       	push	r19
 5ae:	4f 93       	push	r20
 5b0:	5f 93       	push	r21
 5b2:	6f 93       	push	r22
 5b4:	7f 93       	push	r23
 5b6:	8f 93       	push	r24
 5b8:	9f 93       	push	r25
 5ba:	af 93       	push	r26
 5bc:	bf 93       	push	r27
 5be:	ef 93       	push	r30
 5c0:	ff 93       	push	r31
 5c2:	cf 93       	push	r28
 5c4:	df 93       	push	r29
 5c6:	00 d0       	rcall	.+0      	; 0x5c8 <L0^A>

000005c8 <L0^A>:
 5c8:	0f 92       	push	r0
 5ca:	cd b7       	in	r28, 0x3d	; 61
 5cc:	de b7       	in	r29, 0x3e	; 62

000005ce <.Loc.35>:
    //zet max naar sensorwaarde
    if(agv_ultrasoon_current_sensor == 0b00000010)
 5ce:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000005d2 <.Loc.37>:
 5d2:	82 30       	cpi	r24, 0x02	; 2
 5d4:	f1 f1       	breq	.+124    	; 0x652 <.L9>

000005d6 <.Loc.38>:
    {
        agv_ultrasoon_boom_rechts = (ICR3 - 4454)/4*0.0343;
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
 5d6:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000005da <.Loc.40>:
 5da:	84 30       	cpi	r24, 0x04	; 4
 5dc:	09 f4       	brne	.+2      	; 0x5e0 <.Loc.41>

000005de <L0^A>:
 5de:	87 c0       	rjmp	.+270    	; 0x6ee <.L10>

000005e0 <.Loc.41>:
    {
        agv_ultrasoon_boom_links = (ICR3 - 4454)/4*0.0343;
    }
    else if(agv_ultrasoon_current_sensor == 0b00010000)
 5e0:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000005e4 <.Loc.43>:
 5e4:	80 31       	cpi	r24, 0x10	; 16
 5e6:	09 f0       	breq	.+2      	; 0x5ea <.Loc.44>

000005e8 <L0^A>:
 5e8:	67 c0       	rjmp	.+206    	; 0x6b8 <.L7>

000005ea <.Loc.44>:
    {
        agv_ultrasoon_voor_midden = (ICR3 - 4454)/4*0.0343;
 5ea:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
 5ee:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>

000005f2 <.Loc.46>:
 5f2:	86 56       	subi	r24, 0x66	; 102
 5f4:	91 41       	sbci	r25, 0x11	; 17

000005f6 <.Loc.47>:
 5f6:	96 95       	lsr	r25
 5f8:	87 95       	ror	r24
 5fa:	96 95       	lsr	r25
 5fc:	87 95       	ror	r24

000005fe <.Loc.48>:
 5fe:	9c 01       	movw	r18, r24
 600:	40 e0       	ldi	r20, 0x00	; 0
 602:	50 e0       	ldi	r21, 0x00	; 0
 604:	29 83       	std	Y+1, r18	; 0x01
 606:	3a 83       	std	Y+2, r19	; 0x02
 608:	4b 83       	std	Y+3, r20	; 0x03
 60a:	5c 83       	std	Y+4, r21	; 0x04
 60c:	ca 01       	movw	r24, r20
 60e:	b9 01       	movw	r22, r18
 610:	0e 94 c0 04 	call	0x980	; 0x980 <__floatunsisf>

00000614 <.LVL0>:
 614:	28 e2       	ldi	r18, 0x28	; 40
 616:	3e e7       	ldi	r19, 0x7E	; 126
 618:	4c e0       	ldi	r20, 0x0C	; 12
 61a:	5d e3       	ldi	r21, 0x3D	; 61
 61c:	69 83       	std	Y+1, r22	; 0x01
 61e:	7a 83       	std	Y+2, r23	; 0x02
 620:	8b 83       	std	Y+3, r24	; 0x03
 622:	9c 83       	std	Y+4, r25	; 0x04
 624:	69 81       	ldd	r22, Y+1	; 0x01
 626:	7a 81       	ldd	r23, Y+2	; 0x02
 628:	8b 81       	ldd	r24, Y+3	; 0x03
 62a:	9c 81       	ldd	r25, Y+4	; 0x04
 62c:	0e 94 26 05 	call	0xa4c	; 0xa4c <__mulsf3>

00000630 <.LVL1>:
 630:	69 83       	std	Y+1, r22	; 0x01
 632:	7a 83       	std	Y+2, r23	; 0x02
 634:	8b 83       	std	Y+3, r24	; 0x03
 636:	9c 83       	std	Y+4, r25	; 0x04
 638:	69 81       	ldd	r22, Y+1	; 0x01
 63a:	7a 81       	ldd	r23, Y+2	; 0x02
 63c:	8b 81       	ldd	r24, Y+3	; 0x03
 63e:	9c 81       	ldd	r25, Y+4	; 0x04
 640:	0e 94 91 04 	call	0x922	; 0x922 <__fixunssfsi>

00000644 <.LVL2>:
 644:	46 2f       	mov	r20, r22
 646:	57 2f       	mov	r21, r23
 648:	50 93 37 02 	sts	0x0237, r21	; 0x800237 <agv_ultrasoon_voor_midden+0x1>
 64c:	40 93 36 02 	sts	0x0236, r20	; 0x800236 <agv_ultrasoon_voor_midden>
 650:	33 c0       	rjmp	.+102    	; 0x6b8 <.L7>

00000652 <.L9>:
        agv_ultrasoon_boom_rechts = (ICR3 - 4454)/4*0.0343;
 652:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
 656:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>

0000065a <.Loc.52>:
 65a:	86 56       	subi	r24, 0x66	; 102
 65c:	91 41       	sbci	r25, 0x11	; 17

0000065e <.Loc.53>:
 65e:	96 95       	lsr	r25
 660:	87 95       	ror	r24
 662:	96 95       	lsr	r25
 664:	87 95       	ror	r24

00000666 <.Loc.54>:
 666:	9c 01       	movw	r18, r24
 668:	40 e0       	ldi	r20, 0x00	; 0
 66a:	50 e0       	ldi	r21, 0x00	; 0
 66c:	29 83       	std	Y+1, r18	; 0x01
 66e:	3a 83       	std	Y+2, r19	; 0x02
 670:	4b 83       	std	Y+3, r20	; 0x03
 672:	5c 83       	std	Y+4, r21	; 0x04
 674:	ca 01       	movw	r24, r20
 676:	b9 01       	movw	r22, r18
 678:	0e 94 c0 04 	call	0x980	; 0x980 <__floatunsisf>

0000067c <.LVL3>:
 67c:	28 e2       	ldi	r18, 0x28	; 40
 67e:	3e e7       	ldi	r19, 0x7E	; 126
 680:	4c e0       	ldi	r20, 0x0C	; 12
 682:	5d e3       	ldi	r21, 0x3D	; 61
 684:	69 83       	std	Y+1, r22	; 0x01
 686:	7a 83       	std	Y+2, r23	; 0x02
 688:	8b 83       	std	Y+3, r24	; 0x03
 68a:	9c 83       	std	Y+4, r25	; 0x04
 68c:	69 81       	ldd	r22, Y+1	; 0x01
 68e:	7a 81       	ldd	r23, Y+2	; 0x02
 690:	8b 81       	ldd	r24, Y+3	; 0x03
 692:	9c 81       	ldd	r25, Y+4	; 0x04
 694:	0e 94 26 05 	call	0xa4c	; 0xa4c <__mulsf3>

00000698 <.LVL4>:
 698:	69 83       	std	Y+1, r22	; 0x01
 69a:	7a 83       	std	Y+2, r23	; 0x02
 69c:	8b 83       	std	Y+3, r24	; 0x03
 69e:	9c 83       	std	Y+4, r25	; 0x04
 6a0:	69 81       	ldd	r22, Y+1	; 0x01
 6a2:	7a 81       	ldd	r23, Y+2	; 0x02
 6a4:	8b 81       	ldd	r24, Y+3	; 0x03
 6a6:	9c 81       	ldd	r25, Y+4	; 0x04
 6a8:	0e 94 91 04 	call	0x922	; 0x922 <__fixunssfsi>

000006ac <.LVL5>:
 6ac:	46 2f       	mov	r20, r22
 6ae:	57 2f       	mov	r21, r23
 6b0:	50 93 39 02 	sts	0x0239, r21	; 0x800239 <agv_ultrasoon_boom_rechts+0x1>
 6b4:	40 93 38 02 	sts	0x0238, r20	; 0x800238 <agv_ultrasoon_boom_rechts>

000006b8 <.L7>:
    }
    PCMSK2 = 0;
 6b8:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x70006d>

000006bc <.Loc.58>:

}
 6bc:	0f 90       	pop	r0
 6be:	0f 90       	pop	r0
 6c0:	0f 90       	pop	r0
 6c2:	0f 90       	pop	r0
 6c4:	df 91       	pop	r29
 6c6:	cf 91       	pop	r28
 6c8:	ff 91       	pop	r31
 6ca:	ef 91       	pop	r30
 6cc:	bf 91       	pop	r27
 6ce:	af 91       	pop	r26
 6d0:	9f 91       	pop	r25
 6d2:	8f 91       	pop	r24
 6d4:	7f 91       	pop	r23
 6d6:	6f 91       	pop	r22
 6d8:	5f 91       	pop	r21
 6da:	4f 91       	pop	r20
 6dc:	3f 91       	pop	r19
 6de:	2f 91       	pop	r18
 6e0:	0f 90       	pop	r0
 6e2:	0b be       	out	0x3b, r0	; 59
 6e4:	0f 90       	pop	r0
 6e6:	0f be       	out	0x3f, r0	; 63
 6e8:	0f 90       	pop	r0
 6ea:	1f 90       	pop	r1
 6ec:	18 95       	reti

000006ee <.L10>:
        agv_ultrasoon_boom_links = (ICR3 - 4454)/4*0.0343;
 6ee:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
 6f2:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>

000006f6 <.Loc.61>:
 6f6:	86 56       	subi	r24, 0x66	; 102
 6f8:	91 41       	sbci	r25, 0x11	; 17

000006fa <.Loc.62>:
 6fa:	96 95       	lsr	r25
 6fc:	87 95       	ror	r24
 6fe:	96 95       	lsr	r25
 700:	87 95       	ror	r24

00000702 <.Loc.63>:
 702:	9c 01       	movw	r18, r24
 704:	40 e0       	ldi	r20, 0x00	; 0
 706:	50 e0       	ldi	r21, 0x00	; 0
 708:	29 83       	std	Y+1, r18	; 0x01
 70a:	3a 83       	std	Y+2, r19	; 0x02
 70c:	4b 83       	std	Y+3, r20	; 0x03
 70e:	5c 83       	std	Y+4, r21	; 0x04
 710:	ca 01       	movw	r24, r20
 712:	b9 01       	movw	r22, r18
 714:	0e 94 c0 04 	call	0x980	; 0x980 <__floatunsisf>

00000718 <.LVL6>:
 718:	28 e2       	ldi	r18, 0x28	; 40
 71a:	3e e7       	ldi	r19, 0x7E	; 126
 71c:	4c e0       	ldi	r20, 0x0C	; 12
 71e:	5d e3       	ldi	r21, 0x3D	; 61
 720:	69 83       	std	Y+1, r22	; 0x01
 722:	7a 83       	std	Y+2, r23	; 0x02
 724:	8b 83       	std	Y+3, r24	; 0x03
 726:	9c 83       	std	Y+4, r25	; 0x04
 728:	69 81       	ldd	r22, Y+1	; 0x01
 72a:	7a 81       	ldd	r23, Y+2	; 0x02
 72c:	8b 81       	ldd	r24, Y+3	; 0x03
 72e:	9c 81       	ldd	r25, Y+4	; 0x04
 730:	0e 94 26 05 	call	0xa4c	; 0xa4c <__mulsf3>

00000734 <.LVL7>:
 734:	69 83       	std	Y+1, r22	; 0x01
 736:	7a 83       	std	Y+2, r23	; 0x02
 738:	8b 83       	std	Y+3, r24	; 0x03
 73a:	9c 83       	std	Y+4, r25	; 0x04
 73c:	69 81       	ldd	r22, Y+1	; 0x01
 73e:	7a 81       	ldd	r23, Y+2	; 0x02
 740:	8b 81       	ldd	r24, Y+3	; 0x03
 742:	9c 81       	ldd	r25, Y+4	; 0x04
 744:	0e 94 91 04 	call	0x922	; 0x922 <__fixunssfsi>

00000748 <.LVL8>:
 748:	46 2f       	mov	r20, r22
 74a:	57 2f       	mov	r21, r23
 74c:	50 93 3b 02 	sts	0x023B, r21	; 0x80023b <agv_ultrasoon_boom_links+0x1>
 750:	40 93 3a 02 	sts	0x023A, r20	; 0x80023a <agv_ultrasoon_boom_links>
 754:	b1 cf       	rjmp	.-158    	; 0x6b8 <.L7>

00000756 <__vector_11>:

ISR(PCINT2_vect)
{
 756:	1f 92       	push	r1
 758:	0f 92       	push	r0
 75a:	0f b6       	in	r0, 0x3f	; 63
 75c:	0f 92       	push	r0
 75e:	11 24       	eor	r1, r1
 760:	0b b6       	in	r0, 0x3b	; 59
 762:	0f 92       	push	r0
 764:	2f 93       	push	r18
 766:	3f 93       	push	r19
 768:	4f 93       	push	r20
 76a:	5f 93       	push	r21
 76c:	6f 93       	push	r22
 76e:	7f 93       	push	r23
 770:	8f 93       	push	r24
 772:	9f 93       	push	r25
 774:	af 93       	push	r26
 776:	bf 93       	push	r27
 778:	ef 93       	push	r30
 77a:	ff 93       	push	r31
 77c:	cf 93       	push	r28
 77e:	df 93       	push	r29
 780:	00 d0       	rcall	.+0      	; 0x782 <L0^A>

00000782 <L0^A>:
 782:	0f 92       	push	r0
 784:	cd b7       	in	r28, 0x3d	; 61
 786:	de b7       	in	r29, 0x3e	; 62

00000788 <.Loc.66>:
    if(agv_ultrasoon_current_sensor == 0b00000010)
 788:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

0000078c <.Loc.68>:
 78c:	82 30       	cpi	r24, 0x02	; 2
 78e:	09 f4       	brne	.+2      	; 0x792 <.Loc.69>

00000790 <L0^A>:
 790:	3f c0       	rjmp	.+126    	; 0x810 <.L15>

00000792 <.Loc.69>:
    {
        agv_ultrasoon_boom_rechts = (TCNT3 - 4454)/4*0.0343;
        PORTA &= ~(0b00000001);
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
 792:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

00000796 <.Loc.71>:
 796:	84 30       	cpi	r24, 0x04	; 4
 798:	09 f4       	brne	.+2      	; 0x79c <.Loc.72>

0000079a <L0^A>:
 79a:	8e c0       	rjmp	.+284    	; 0x8b8 <.L16>

0000079c <.Loc.72>:
    {
        agv_ultrasoon_boom_links = (TCNT3 - 4454)/4*0.0343;
        PORTA &= ~(0b00000010);
    }
    else if(agv_ultrasoon_current_sensor == 0b00010000)
 79c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000007a0 <.Loc.74>:
 7a0:	80 31       	cpi	r24, 0x10	; 16
 7a2:	09 f0       	breq	.+2      	; 0x7a6 <.Loc.75>

000007a4 <L0^A>:
 7a4:	69 c0       	rjmp	.+210    	; 0x878 <.L13>

000007a6 <.Loc.75>:
    {
        agv_ultrasoon_voor_midden = (TCNT3 - 4454)/4*0.0343;
 7a6:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 7aa:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>

000007ae <.Loc.77>:
 7ae:	86 56       	subi	r24, 0x66	; 102
 7b0:	91 41       	sbci	r25, 0x11	; 17

000007b2 <.Loc.78>:
 7b2:	96 95       	lsr	r25
 7b4:	87 95       	ror	r24
 7b6:	96 95       	lsr	r25
 7b8:	87 95       	ror	r24

000007ba <.Loc.79>:
 7ba:	9c 01       	movw	r18, r24
 7bc:	40 e0       	ldi	r20, 0x00	; 0
 7be:	50 e0       	ldi	r21, 0x00	; 0
 7c0:	29 83       	std	Y+1, r18	; 0x01
 7c2:	3a 83       	std	Y+2, r19	; 0x02
 7c4:	4b 83       	std	Y+3, r20	; 0x03
 7c6:	5c 83       	std	Y+4, r21	; 0x04
 7c8:	ca 01       	movw	r24, r20
 7ca:	b9 01       	movw	r22, r18
 7cc:	0e 94 c0 04 	call	0x980	; 0x980 <__floatunsisf>

000007d0 <.LVL9>:
 7d0:	28 e2       	ldi	r18, 0x28	; 40
 7d2:	3e e7       	ldi	r19, 0x7E	; 126
 7d4:	4c e0       	ldi	r20, 0x0C	; 12
 7d6:	5d e3       	ldi	r21, 0x3D	; 61
 7d8:	69 83       	std	Y+1, r22	; 0x01
 7da:	7a 83       	std	Y+2, r23	; 0x02
 7dc:	8b 83       	std	Y+3, r24	; 0x03
 7de:	9c 83       	std	Y+4, r25	; 0x04
 7e0:	69 81       	ldd	r22, Y+1	; 0x01
 7e2:	7a 81       	ldd	r23, Y+2	; 0x02
 7e4:	8b 81       	ldd	r24, Y+3	; 0x03
 7e6:	9c 81       	ldd	r25, Y+4	; 0x04
 7e8:	0e 94 26 05 	call	0xa4c	; 0xa4c <__mulsf3>

000007ec <.LVL10>:
 7ec:	69 83       	std	Y+1, r22	; 0x01
 7ee:	7a 83       	std	Y+2, r23	; 0x02
 7f0:	8b 83       	std	Y+3, r24	; 0x03
 7f2:	9c 83       	std	Y+4, r25	; 0x04
 7f4:	69 81       	ldd	r22, Y+1	; 0x01
 7f6:	7a 81       	ldd	r23, Y+2	; 0x02
 7f8:	8b 81       	ldd	r24, Y+3	; 0x03
 7fa:	9c 81       	ldd	r25, Y+4	; 0x04
 7fc:	0e 94 91 04 	call	0x922	; 0x922 <__fixunssfsi>

00000800 <.LVL11>:
 800:	46 2f       	mov	r20, r22
 802:	57 2f       	mov	r21, r23
 804:	50 93 37 02 	sts	0x0237, r21	; 0x800237 <agv_ultrasoon_voor_midden+0x1>
 808:	40 93 36 02 	sts	0x0236, r20	; 0x800236 <agv_ultrasoon_voor_midden>

0000080c <.Loc.81>:
        PORTA &= ~(0b00001000);
 80c:	13 98       	cbi	0x02, 3	; 2
 80e:	34 c0       	rjmp	.+104    	; 0x878 <.L13>

00000810 <.L15>:
        agv_ultrasoon_boom_rechts = (TCNT3 - 4454)/4*0.0343;
 810:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 814:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>

00000818 <.Loc.85>:
 818:	86 56       	subi	r24, 0x66	; 102
 81a:	91 41       	sbci	r25, 0x11	; 17

0000081c <.Loc.86>:
 81c:	96 95       	lsr	r25
 81e:	87 95       	ror	r24
 820:	96 95       	lsr	r25
 822:	87 95       	ror	r24

00000824 <.Loc.87>:
 824:	9c 01       	movw	r18, r24
 826:	40 e0       	ldi	r20, 0x00	; 0
 828:	50 e0       	ldi	r21, 0x00	; 0
 82a:	29 83       	std	Y+1, r18	; 0x01
 82c:	3a 83       	std	Y+2, r19	; 0x02
 82e:	4b 83       	std	Y+3, r20	; 0x03
 830:	5c 83       	std	Y+4, r21	; 0x04
 832:	ca 01       	movw	r24, r20
 834:	b9 01       	movw	r22, r18
 836:	0e 94 c0 04 	call	0x980	; 0x980 <__floatunsisf>

0000083a <.LVL12>:
 83a:	28 e2       	ldi	r18, 0x28	; 40
 83c:	3e e7       	ldi	r19, 0x7E	; 126
 83e:	4c e0       	ldi	r20, 0x0C	; 12
 840:	5d e3       	ldi	r21, 0x3D	; 61
 842:	69 83       	std	Y+1, r22	; 0x01
 844:	7a 83       	std	Y+2, r23	; 0x02
 846:	8b 83       	std	Y+3, r24	; 0x03
 848:	9c 83       	std	Y+4, r25	; 0x04
 84a:	69 81       	ldd	r22, Y+1	; 0x01
 84c:	7a 81       	ldd	r23, Y+2	; 0x02
 84e:	8b 81       	ldd	r24, Y+3	; 0x03
 850:	9c 81       	ldd	r25, Y+4	; 0x04
 852:	0e 94 26 05 	call	0xa4c	; 0xa4c <__mulsf3>

00000856 <.LVL13>:
 856:	69 83       	std	Y+1, r22	; 0x01
 858:	7a 83       	std	Y+2, r23	; 0x02
 85a:	8b 83       	std	Y+3, r24	; 0x03
 85c:	9c 83       	std	Y+4, r25	; 0x04
 85e:	69 81       	ldd	r22, Y+1	; 0x01
 860:	7a 81       	ldd	r23, Y+2	; 0x02
 862:	8b 81       	ldd	r24, Y+3	; 0x03
 864:	9c 81       	ldd	r25, Y+4	; 0x04
 866:	0e 94 91 04 	call	0x922	; 0x922 <__fixunssfsi>

0000086a <.LVL14>:
 86a:	46 2f       	mov	r20, r22
 86c:	57 2f       	mov	r21, r23
 86e:	50 93 39 02 	sts	0x0239, r21	; 0x800239 <agv_ultrasoon_boom_rechts+0x1>
 872:	40 93 38 02 	sts	0x0238, r20	; 0x800238 <agv_ultrasoon_boom_rechts>

00000876 <.Loc.89>:
        PORTA &= ~(0b00000001);
 876:	10 98       	cbi	0x02, 0	; 2

00000878 <.L13>:
    }
    //check welke sensor en schrijf timer3 waarde naar sensorwaarde
    TIMSK3 &= ~(1<<ICIE3);
 878:	e1 e7       	ldi	r30, 0x71	; 113
 87a:	f0 e0       	ldi	r31, 0x00	; 0
 87c:	80 81       	ld	r24, Z
 87e:	8f 7d       	andi	r24, 0xDF	; 223
 880:	80 83       	st	Z, r24

00000882 <.Loc.93>:
    //zet timer3 overflow flag uit
    PCMSK2 = 0;
 882:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x70006d>

00000886 <.Loc.95>:
}
 886:	0f 90       	pop	r0
 888:	0f 90       	pop	r0
 88a:	0f 90       	pop	r0
 88c:	0f 90       	pop	r0
 88e:	df 91       	pop	r29
 890:	cf 91       	pop	r28
 892:	ff 91       	pop	r31
 894:	ef 91       	pop	r30
 896:	bf 91       	pop	r27
 898:	af 91       	pop	r26
 89a:	9f 91       	pop	r25
 89c:	8f 91       	pop	r24
 89e:	7f 91       	pop	r23
 8a0:	6f 91       	pop	r22
 8a2:	5f 91       	pop	r21
 8a4:	4f 91       	pop	r20
 8a6:	3f 91       	pop	r19
 8a8:	2f 91       	pop	r18
 8aa:	0f 90       	pop	r0
 8ac:	0b be       	out	0x3b, r0	; 59
 8ae:	0f 90       	pop	r0
 8b0:	0f be       	out	0x3f, r0	; 63
 8b2:	0f 90       	pop	r0
 8b4:	1f 90       	pop	r1
 8b6:	18 95       	reti

000008b8 <.L16>:
        agv_ultrasoon_boom_links = (TCNT3 - 4454)/4*0.0343;
 8b8:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 8bc:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>

000008c0 <.Loc.98>:
 8c0:	86 56       	subi	r24, 0x66	; 102
 8c2:	91 41       	sbci	r25, 0x11	; 17

000008c4 <.Loc.99>:
 8c4:	96 95       	lsr	r25
 8c6:	87 95       	ror	r24
 8c8:	96 95       	lsr	r25
 8ca:	87 95       	ror	r24

000008cc <.Loc.100>:
 8cc:	9c 01       	movw	r18, r24
 8ce:	40 e0       	ldi	r20, 0x00	; 0
 8d0:	50 e0       	ldi	r21, 0x00	; 0
 8d2:	29 83       	std	Y+1, r18	; 0x01
 8d4:	3a 83       	std	Y+2, r19	; 0x02
 8d6:	4b 83       	std	Y+3, r20	; 0x03
 8d8:	5c 83       	std	Y+4, r21	; 0x04
 8da:	ca 01       	movw	r24, r20
 8dc:	b9 01       	movw	r22, r18
 8de:	0e 94 c0 04 	call	0x980	; 0x980 <__floatunsisf>

000008e2 <.LVL15>:
 8e2:	28 e2       	ldi	r18, 0x28	; 40
 8e4:	3e e7       	ldi	r19, 0x7E	; 126
 8e6:	4c e0       	ldi	r20, 0x0C	; 12
 8e8:	5d e3       	ldi	r21, 0x3D	; 61
 8ea:	69 83       	std	Y+1, r22	; 0x01
 8ec:	7a 83       	std	Y+2, r23	; 0x02
 8ee:	8b 83       	std	Y+3, r24	; 0x03
 8f0:	9c 83       	std	Y+4, r25	; 0x04
 8f2:	69 81       	ldd	r22, Y+1	; 0x01
 8f4:	7a 81       	ldd	r23, Y+2	; 0x02
 8f6:	8b 81       	ldd	r24, Y+3	; 0x03
 8f8:	9c 81       	ldd	r25, Y+4	; 0x04
 8fa:	0e 94 26 05 	call	0xa4c	; 0xa4c <__mulsf3>

000008fe <.LVL16>:
 8fe:	69 83       	std	Y+1, r22	; 0x01
 900:	7a 83       	std	Y+2, r23	; 0x02
 902:	8b 83       	std	Y+3, r24	; 0x03
 904:	9c 83       	std	Y+4, r25	; 0x04
 906:	69 81       	ldd	r22, Y+1	; 0x01
 908:	7a 81       	ldd	r23, Y+2	; 0x02
 90a:	8b 81       	ldd	r24, Y+3	; 0x03
 90c:	9c 81       	ldd	r25, Y+4	; 0x04
 90e:	0e 94 91 04 	call	0x922	; 0x922 <__fixunssfsi>

00000912 <.LVL17>:
 912:	46 2f       	mov	r20, r22
 914:	57 2f       	mov	r21, r23
 916:	50 93 3b 02 	sts	0x023B, r21	; 0x80023b <agv_ultrasoon_boom_links+0x1>
 91a:	40 93 3a 02 	sts	0x023A, r20	; 0x80023a <agv_ultrasoon_boom_links>

0000091e <.Loc.102>:
        PORTA &= ~(0b00000010);
 91e:	11 98       	cbi	0x02, 1	; 2
 920:	ab cf       	rjmp	.-170    	; 0x878 <.L13>

00000922 <__fixunssfsi>:
 922:	0e 94 05 05 	call	0xa0a	; 0xa0a <__fp_splitA>
 926:	88 f0       	brcs	.+34     	; 0x94a <.L_err>
 928:	9f 57       	subi	r25, 0x7F	; 127
 92a:	98 f0       	brcs	.+38     	; 0x952 <.L_zr>
 92c:	b9 2f       	mov	r27, r25
 92e:	99 27       	eor	r25, r25
 930:	b7 51       	subi	r27, 0x17	; 23
 932:	b0 f0       	brcs	.+44     	; 0x960 <.L4^B1>
 934:	e1 f0       	breq	.+56     	; 0x96e <.L_sign>

00000936 <.L1^B1>:
 936:	66 0f       	add	r22, r22
 938:	77 1f       	adc	r23, r23
 93a:	88 1f       	adc	r24, r24
 93c:	99 1f       	adc	r25, r25
 93e:	1a f0       	brmi	.+6      	; 0x946 <.L2^B1>
 940:	ba 95       	dec	r27
 942:	c9 f7       	brne	.-14     	; 0x936 <.L1^B1>
 944:	14 c0       	rjmp	.+40     	; 0x96e <.L_sign>

00000946 <.L2^B1>:
 946:	b1 30       	cpi	r27, 0x01	; 1
 948:	91 f0       	breq	.+36     	; 0x96e <.L_sign>

0000094a <.L_err>:
 94a:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__fp_zero>
 94e:	b1 e0       	ldi	r27, 0x01	; 1
 950:	08 95       	ret

00000952 <.L_zr>:
 952:	0c 94 1f 05 	jmp	0xa3e	; 0xa3e <__fp_zero>

00000956 <.L3^B1>:
 956:	67 2f       	mov	r22, r23
 958:	78 2f       	mov	r23, r24
 95a:	88 27       	eor	r24, r24
 95c:	b8 5f       	subi	r27, 0xF8	; 248
 95e:	39 f0       	breq	.+14     	; 0x96e <.L_sign>

00000960 <.L4^B1>:
 960:	b9 3f       	cpi	r27, 0xF9	; 249
 962:	cc f3       	brlt	.-14     	; 0x956 <.L3^B1>

00000964 <.L5^B1>:
 964:	86 95       	lsr	r24
 966:	77 95       	ror	r23
 968:	67 95       	ror	r22
 96a:	b3 95       	inc	r27
 96c:	d9 f7       	brne	.-10     	; 0x964 <.L5^B1>

0000096e <.L_sign>:
 96e:	3e f4       	brtc	.+14     	; 0x97e <.L6^B1>
 970:	90 95       	com	r25
 972:	80 95       	com	r24
 974:	70 95       	com	r23
 976:	61 95       	neg	r22
 978:	7f 4f       	sbci	r23, 0xFF	; 255
 97a:	8f 4f       	sbci	r24, 0xFF	; 255
 97c:	9f 4f       	sbci	r25, 0xFF	; 255

0000097e <.L6^B1>:
 97e:	08 95       	ret

00000980 <__floatunsisf>:
 980:	e8 94       	clt
 982:	09 c0       	rjmp	.+18     	; 0x996 <.L1^B1>

00000984 <__floatsisf>:
 984:	97 fb       	bst	r25, 7
 986:	3e f4       	brtc	.+14     	; 0x996 <.L1^B1>
 988:	90 95       	com	r25
 98a:	80 95       	com	r24
 98c:	70 95       	com	r23
 98e:	61 95       	neg	r22
 990:	7f 4f       	sbci	r23, 0xFF	; 255
 992:	8f 4f       	sbci	r24, 0xFF	; 255
 994:	9f 4f       	sbci	r25, 0xFF	; 255

00000996 <.L1^B1>:
 996:	99 23       	and	r25, r25
 998:	a9 f0       	breq	.+42     	; 0x9c4 <.L4^B1>
 99a:	f9 2f       	mov	r31, r25
 99c:	96 e9       	ldi	r25, 0x96	; 150
 99e:	bb 27       	eor	r27, r27

000009a0 <.L2^B1>:
 9a0:	93 95       	inc	r25
 9a2:	f6 95       	lsr	r31
 9a4:	87 95       	ror	r24
 9a6:	77 95       	ror	r23
 9a8:	67 95       	ror	r22
 9aa:	b7 95       	ror	r27
 9ac:	f1 11       	cpse	r31, r1
 9ae:	f8 cf       	rjmp	.-16     	; 0x9a0 <.L2^B1>
 9b0:	fa f4       	brpl	.+62     	; 0x9f0 <.L_pack>
 9b2:	bb 0f       	add	r27, r27
 9b4:	11 f4       	brne	.+4      	; 0x9ba <.L3^B1>
 9b6:	60 ff       	sbrs	r22, 0
 9b8:	1b c0       	rjmp	.+54     	; 0x9f0 <.L_pack>

000009ba <.L3^B1>:
 9ba:	6f 5f       	subi	r22, 0xFF	; 255
 9bc:	7f 4f       	sbci	r23, 0xFF	; 255
 9be:	8f 4f       	sbci	r24, 0xFF	; 255
 9c0:	9f 4f       	sbci	r25, 0xFF	; 255
 9c2:	16 c0       	rjmp	.+44     	; 0x9f0 <.L_pack>

000009c4 <.L4^B1>:
 9c4:	88 23       	and	r24, r24
 9c6:	11 f0       	breq	.+4      	; 0x9cc <.L5^B1>
 9c8:	96 e9       	ldi	r25, 0x96	; 150
 9ca:	11 c0       	rjmp	.+34     	; 0x9ee <.L8^B1>

000009cc <.L5^B1>:
 9cc:	77 23       	and	r23, r23
 9ce:	21 f0       	breq	.+8      	; 0x9d8 <.L6^B1>
 9d0:	9e e8       	ldi	r25, 0x8E	; 142
 9d2:	87 2f       	mov	r24, r23
 9d4:	76 2f       	mov	r23, r22
 9d6:	05 c0       	rjmp	.+10     	; 0x9e2 <.L7^B1>

000009d8 <.L6^B1>:
 9d8:	66 23       	and	r22, r22
 9da:	71 f0       	breq	.+28     	; 0x9f8 <.L9^B1>
 9dc:	96 e8       	ldi	r25, 0x86	; 134
 9de:	86 2f       	mov	r24, r22
 9e0:	70 e0       	ldi	r23, 0x00	; 0

000009e2 <.L7^B1>:
 9e2:	60 e0       	ldi	r22, 0x00	; 0
 9e4:	2a f0       	brmi	.+10     	; 0x9f0 <.L_pack>

000009e6 <.L10^B1>:
 9e6:	9a 95       	dec	r25
 9e8:	66 0f       	add	r22, r22
 9ea:	77 1f       	adc	r23, r23
 9ec:	88 1f       	adc	r24, r24

000009ee <.L8^B1>:
 9ee:	da f7       	brpl	.-10     	; 0x9e6 <.L10^B1>

000009f0 <.L_pack>:
 9f0:	88 0f       	add	r24, r24
 9f2:	96 95       	lsr	r25
 9f4:	87 95       	ror	r24
 9f6:	97 f9       	bld	r25, 7

000009f8 <.L9^B1>:
 9f8:	08 95       	ret

000009fa <__fp_split3>:
 9fa:	57 fd       	sbrc	r21, 7
 9fc:	90 58       	subi	r25, 0x80	; 128
 9fe:	44 0f       	add	r20, r20
 a00:	55 1f       	adc	r21, r21
 a02:	59 f0       	breq	.+22     	; 0xa1a <.L4^B1>
 a04:	5f 3f       	cpi	r21, 0xFF	; 255
 a06:	71 f0       	breq	.+28     	; 0xa24 <.L5^B1>

00000a08 <.L1^B1>:
 a08:	47 95       	ror	r20

00000a0a <__fp_splitA>:
 a0a:	88 0f       	add	r24, r24
 a0c:	97 fb       	bst	r25, 7
 a0e:	99 1f       	adc	r25, r25
 a10:	61 f0       	breq	.+24     	; 0xa2a <.L6^B1>
 a12:	9f 3f       	cpi	r25, 0xFF	; 255
 a14:	79 f0       	breq	.+30     	; 0xa34 <.L7^B1>

00000a16 <.L3^B1>:
 a16:	87 95       	ror	r24
 a18:	08 95       	ret

00000a1a <.L4^B1>:
 a1a:	12 16       	cp	r1, r18
 a1c:	13 06       	cpc	r1, r19
 a1e:	14 06       	cpc	r1, r20
 a20:	55 1f       	adc	r21, r21
 a22:	f2 cf       	rjmp	.-28     	; 0xa08 <.L1^B1>

00000a24 <.L5^B1>:
 a24:	46 95       	lsr	r20
 a26:	f1 df       	rcall	.-30     	; 0xa0a <__fp_splitA>
 a28:	08 c0       	rjmp	.+16     	; 0xa3a <.L8^B1>

00000a2a <.L6^B1>:
 a2a:	16 16       	cp	r1, r22
 a2c:	17 06       	cpc	r1, r23
 a2e:	18 06       	cpc	r1, r24
 a30:	99 1f       	adc	r25, r25
 a32:	f1 cf       	rjmp	.-30     	; 0xa16 <.L3^B1>

00000a34 <.L7^B1>:
 a34:	86 95       	lsr	r24
 a36:	71 05       	cpc	r23, r1
 a38:	61 05       	cpc	r22, r1

00000a3a <.L8^B1>:
 a3a:	08 94       	sec
 a3c:	08 95       	ret

00000a3e <__fp_zero>:
 a3e:	e8 94       	clt

00000a40 <__fp_szero>:
 a40:	bb 27       	eor	r27, r27
 a42:	66 27       	eor	r22, r22
 a44:	77 27       	eor	r23, r23
 a46:	cb 01       	movw	r24, r22
 a48:	97 f9       	bld	r25, 7
 a4a:	08 95       	ret

00000a4c <__mulsf3>:
 a4c:	0e 94 39 05 	call	0xa72	; 0xa72 <__mulsf3x>
 a50:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__fp_round>

00000a54 <.L^B1>:
 a54:	0e 94 9c 05 	call	0xb38	; 0xb38 <__fp_pscA>
 a58:	38 f0       	brcs	.+14     	; 0xa68 <.L1^B1>
 a5a:	0e 94 a3 05 	call	0xb46	; 0xb46 <__fp_pscB>
 a5e:	20 f0       	brcs	.+8      	; 0xa68 <.L1^B1>
 a60:	95 23       	and	r25, r21
 a62:	11 f0       	breq	.+4      	; 0xa68 <.L1^B1>
 a64:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_inf>

00000a68 <.L1^B1>:
 a68:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_nan>

00000a6c <.L2^B1>:
 a6c:	11 24       	eor	r1, r1
 a6e:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__fp_szero>

00000a72 <__mulsf3x>:
 a72:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__fp_split3>
 a76:	70 f3       	brcs	.-36     	; 0xa54 <.L^B1>

00000a78 <__mulsf3_pse>:
 a78:	95 9f       	mul	r25, r21
 a7a:	c1 f3       	breq	.-16     	; 0xa6c <.L2^B1>
 a7c:	95 0f       	add	r25, r21
 a7e:	50 e0       	ldi	r21, 0x00	; 0
 a80:	55 1f       	adc	r21, r21
 a82:	62 9f       	mul	r22, r18
 a84:	f0 01       	movw	r30, r0
 a86:	72 9f       	mul	r23, r18
 a88:	bb 27       	eor	r27, r27
 a8a:	f0 0d       	add	r31, r0
 a8c:	b1 1d       	adc	r27, r1
 a8e:	63 9f       	mul	r22, r19
 a90:	aa 27       	eor	r26, r26
 a92:	f0 0d       	add	r31, r0
 a94:	b1 1d       	adc	r27, r1
 a96:	aa 1f       	adc	r26, r26
 a98:	64 9f       	mul	r22, r20
 a9a:	66 27       	eor	r22, r22
 a9c:	b0 0d       	add	r27, r0
 a9e:	a1 1d       	adc	r26, r1
 aa0:	66 1f       	adc	r22, r22
 aa2:	82 9f       	mul	r24, r18
 aa4:	22 27       	eor	r18, r18
 aa6:	b0 0d       	add	r27, r0
 aa8:	a1 1d       	adc	r26, r1
 aaa:	62 1f       	adc	r22, r18
 aac:	73 9f       	mul	r23, r19
 aae:	b0 0d       	add	r27, r0
 ab0:	a1 1d       	adc	r26, r1
 ab2:	62 1f       	adc	r22, r18
 ab4:	83 9f       	mul	r24, r19
 ab6:	a0 0d       	add	r26, r0
 ab8:	61 1d       	adc	r22, r1
 aba:	22 1f       	adc	r18, r18
 abc:	74 9f       	mul	r23, r20
 abe:	33 27       	eor	r19, r19
 ac0:	a0 0d       	add	r26, r0
 ac2:	61 1d       	adc	r22, r1
 ac4:	23 1f       	adc	r18, r19
 ac6:	84 9f       	mul	r24, r20
 ac8:	60 0d       	add	r22, r0
 aca:	21 1d       	adc	r18, r1
 acc:	82 2f       	mov	r24, r18
 ace:	76 2f       	mov	r23, r22
 ad0:	6a 2f       	mov	r22, r26
 ad2:	11 24       	eor	r1, r1
 ad4:	9f 57       	subi	r25, 0x7F	; 127
 ad6:	50 40       	sbci	r21, 0x00	; 0
 ad8:	9a f0       	brmi	.+38     	; 0xb00 <.L13^B1>
 ada:	f1 f0       	breq	.+60     	; 0xb18 <.L15^B1>

00000adc <.L10^B1>:
 adc:	88 23       	and	r24, r24
 ade:	4a f0       	brmi	.+18     	; 0xaf2 <.L11^B1>
 ae0:	ee 0f       	add	r30, r30
 ae2:	ff 1f       	adc	r31, r31
 ae4:	bb 1f       	adc	r27, r27
 ae6:	66 1f       	adc	r22, r22
 ae8:	77 1f       	adc	r23, r23
 aea:	88 1f       	adc	r24, r24
 aec:	91 50       	subi	r25, 0x01	; 1
 aee:	50 40       	sbci	r21, 0x00	; 0
 af0:	a9 f7       	brne	.-22     	; 0xadc <.L10^B1>

00000af2 <.L11^B1>:
 af2:	9e 3f       	cpi	r25, 0xFE	; 254
 af4:	51 05       	cpc	r21, r1
 af6:	80 f0       	brcs	.+32     	; 0xb18 <.L15^B1>
 af8:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_inf>

00000afc <.L12^B1>:
 afc:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__fp_szero>

00000b00 <.L13^B1>:
 b00:	5f 3f       	cpi	r21, 0xFF	; 255
 b02:	e4 f3       	brlt	.-8      	; 0xafc <.L12^B1>
 b04:	98 3e       	cpi	r25, 0xE8	; 232
 b06:	d4 f3       	brlt	.-12     	; 0xafc <.L12^B1>

00000b08 <.L14^B1>:
 b08:	86 95       	lsr	r24
 b0a:	77 95       	ror	r23
 b0c:	67 95       	ror	r22
 b0e:	b7 95       	ror	r27
 b10:	f7 95       	ror	r31
 b12:	e7 95       	ror	r30
 b14:	9f 5f       	subi	r25, 0xFF	; 255
 b16:	c1 f7       	brne	.-16     	; 0xb08 <.L14^B1>

00000b18 <.L15^B1>:
 b18:	fe 2b       	or	r31, r30
 b1a:	88 0f       	add	r24, r24
 b1c:	91 1d       	adc	r25, r1
 b1e:	96 95       	lsr	r25
 b20:	87 95       	ror	r24
 b22:	97 f9       	bld	r25, 7
 b24:	08 95       	ret

00000b26 <__fp_inf>:
 b26:	97 f9       	bld	r25, 7
 b28:	9f 67       	ori	r25, 0x7F	; 127
 b2a:	80 e8       	ldi	r24, 0x80	; 128
 b2c:	70 e0       	ldi	r23, 0x00	; 0
 b2e:	60 e0       	ldi	r22, 0x00	; 0
 b30:	08 95       	ret

00000b32 <__fp_nan>:
 b32:	9f ef       	ldi	r25, 0xFF	; 255
 b34:	80 ec       	ldi	r24, 0xC0	; 192
 b36:	08 95       	ret

00000b38 <__fp_pscA>:
 b38:	00 24       	eor	r0, r0
 b3a:	0a 94       	dec	r0
 b3c:	16 16       	cp	r1, r22
 b3e:	17 06       	cpc	r1, r23
 b40:	18 06       	cpc	r1, r24
 b42:	09 06       	cpc	r0, r25
 b44:	08 95       	ret

00000b46 <__fp_pscB>:
 b46:	00 24       	eor	r0, r0
 b48:	0a 94       	dec	r0
 b4a:	12 16       	cp	r1, r18
 b4c:	13 06       	cpc	r1, r19
 b4e:	14 06       	cpc	r1, r20
 b50:	05 06       	cpc	r0, r21
 b52:	08 95       	ret

00000b54 <__fp_round>:
 b54:	09 2e       	mov	r0, r25
 b56:	03 94       	inc	r0
 b58:	00 0c       	add	r0, r0
 b5a:	11 f4       	brne	.+4      	; 0xb60 <.L1^B1>
 b5c:	88 23       	and	r24, r24
 b5e:	52 f0       	brmi	.+20     	; 0xb74 <.L3^B1>

00000b60 <.L1^B1>:
 b60:	bb 0f       	add	r27, r27
 b62:	40 f4       	brcc	.+16     	; 0xb74 <.L3^B1>
 b64:	bf 2b       	or	r27, r31
 b66:	11 f4       	brne	.+4      	; 0xb6c <.L2^B1>
 b68:	60 ff       	sbrs	r22, 0
 b6a:	04 c0       	rjmp	.+8      	; 0xb74 <.L3^B1>

00000b6c <.L2^B1>:
 b6c:	6f 5f       	subi	r22, 0xFF	; 255
 b6e:	7f 4f       	sbci	r23, 0xFF	; 255
 b70:	8f 4f       	sbci	r24, 0xFF	; 255
 b72:	9f 4f       	sbci	r25, 0xFF	; 255

00000b74 <.L3^B1>:
 b74:	08 95       	ret

00000b76 <_exit>:
 b76:	f8 94       	cli

00000b78 <__stop_program>:
 b78:	ff cf       	rjmp	.-2      	; 0xb78 <__stop_program>
