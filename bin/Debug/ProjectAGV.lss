
bin\Debug\ProjectAGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800200  00000ab6  00000b6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ab6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080022a  0080022a  00000b94  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000b94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000b97  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bac  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  00000bf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000015fc  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00001119  00000000  00000000  000022c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000dd4  00000000  00000000  000033dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  0000026c  00000000  00000000  000041b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000007fb  00000000  00000000  00004420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001cc  00000000  00000000  00004c1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 000001c0  00000000  00000000  00004de7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 00000024  00000000  00000000  00004fa7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 49 03 	jmp	0x692	; 0x692 <__vector_11>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_23>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__vector_31>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 47 02 	jmp	0x48e	; 0x48e <__vector_33>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	e6 eb       	ldi	r30, 0xB6	; 182

000000fc <.Loc.4>:
  fc:	fa e0       	ldi	r31, 0x0A	; 10

000000fe <.Loc.5>:
  fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
 100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
 102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
 104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
 106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
 108:	aa 32       	cpi	r26, 0x2A	; 42

0000010a <.Loc.11>:
 10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
 10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
 110:	aa e2       	ldi	r26, 0x2A	; 42

00000112 <.Loc.2>:
 112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
 114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
 116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
 118:	aa 33       	cpi	r26, 0x3A	; 58

0000011a <.Loc.6>:
 11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
 11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
 11e:	0e 94 ca 00 	call	0x194	; 0x194 <main>
 122:	0c 94 59 05 	jmp	0xab2	; 0xab2 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <initAGV>:
#define BoomgaardRijden 2
#define BoomgaardBocht 3


void initAGV(){
    agv_ultrasoon_init();
 12a:	0e 94 1d 02 	call	0x43a	; 0x43a <agv_ultrasoon_init>

0000012e <.LVL0>:
    initSteppermotorAVRDriver();
 12e:	0e 94 89 01 	call	0x312	; 0x312 <initSteppermotorAVRDriver>

00000132 <.LVL1>:
}
 132:	08 95       	ret

00000134 <checkSensors>:

    /*if(maxDistance > filterDistance(agv_ultrasoon_voor_midden)){
        return 0;
    }*/

    if((TreeDistance > filterDistance(agv_ultrasoon_boom_links)) && !leftPreviousState){
 134:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <agv_ultrasoon_boom_links>
 138:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <agv_ultrasoon_boom_links+0x1>

0000013c <.LBI13>:

}

int filterDistance(int distance){
    //Alle waardes boven 200 zijn bs anyways
    if(distance > 200){
 13c:	44 97       	sbiw	r24, 0x14	; 20

0000013e <.Loc.12>:
 13e:	85 3b       	cpi	r24, 0xB5	; 181
 140:	91 05       	cpc	r25, r1
 142:	e0 f0       	brcs	.+56     	; 0x17c <.L3>

00000144 <.Loc.13>:
    if((TreeDistance > filterDistance(agv_ultrasoon_boom_links)) && !leftPreviousState){
 144:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <leftPreviousState.0>
 148:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <leftPreviousState.0+0x1>
 14c:	89 2b       	or	r24, r25
 14e:	79 f0       	breq	.+30     	; 0x16e <.L8>

00000150 <.L4>:
    } else if(leftPreviousState && (TreeDistance < filterDistance(agv_ultrasoon_boom_links)) ){
 150:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <agv_ultrasoon_boom_links>
 154:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <agv_ultrasoon_boom_links+0x1>

00000158 <.LBB16>:
    if(distance > 200){
 158:	45 97       	sbiw	r24, 0x15	; 21

0000015a <.Loc.19>:
 15a:	84 3b       	cpi	r24, 0xB4	; 180
 15c:	91 05       	cpc	r25, r1
 15e:	b8 f4       	brcc	.+46     	; 0x18e <.L7>

00000160 <.LBE16>:
        leftPreviousState = 0;
 160:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <leftPreviousState.0+0x1>
 164:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <leftPreviousState.0>

00000168 <.Loc.24>:
    return 3;
 168:	83 e0       	ldi	r24, 0x03	; 3
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	08 95       	ret

0000016e <.L8>:
        leftPreviousState = 1;
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <leftPreviousState.0+0x1>
 176:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <leftPreviousState.0>

0000017a <.Loc.27>:
        return 1;
 17a:	08 95       	ret

0000017c <.L3>:
    } else if(leftPreviousState && (TreeDistance < filterDistance(agv_ultrasoon_boom_links)) ){
 17c:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <leftPreviousState.0>
 180:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <leftPreviousState.0+0x1>
 184:	89 2b       	or	r24, r25
 186:	21 f7       	brne	.-56     	; 0x150 <.L4>

00000188 <.Loc.33>:
    return 3;
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	08 95       	ret

0000018e <.L7>:
 18e:	83 e0       	ldi	r24, 0x03	; 3
 190:	90 e0       	ldi	r25, 0x00	; 0

00000192 <.Loc.35>:
}
 192:	08 95       	ret

00000194 <main>:
    initAGV();
 194:	0e 94 95 00 	call	0x12a	; 0x12a <initAGV>

00000198 <.LVL12>:
 198:	0c c0       	rjmp	.+24     	; 0x1b2 <.L18>

0000019a <.L12>:
 19a:	23 30       	cpi	r18, 0x03	; 3
 19c:	31 05       	cpc	r19, r1
 19e:	49 f4       	brne	.+18     	; 0x1b2 <.L18>

000001a0 <.Loc.41>:
                        setBothStepperMode(ForwardStep);
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

000001a8 <.LVL14>:
                        break;
 1a8:	04 c0       	rjmp	.+8      	; 0x1b2 <.L18>

000001aa <.L13>:
                        setBothStepperMode(Off);
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

000001b2 <.L18>:
                int WorldState = checkSensors();
 1b2:	0e 94 9a 00 	call	0x134	; 0x134 <checkSensors>

000001b6 <.LVL17>:
 1b6:	28 2f       	mov	r18, r24
 1b8:	39 2f       	mov	r19, r25

000001ba <.Loc.50>:
                switch(WorldState){
 1ba:	22 30       	cpi	r18, 0x02	; 2
 1bc:	31 05       	cpc	r19, r1
 1be:	a9 f0       	breq	.+42     	; 0x1ea <.L11>
 1c0:	64 f7       	brge	.-40     	; 0x19a <.L12>
 1c2:	21 15       	cp	r18, r1
 1c4:	31 05       	cpc	r19, r1
 1c6:	89 f3       	breq	.-30     	; 0x1aa <.L13>
 1c8:	21 30       	cpi	r18, 0x01	; 1
 1ca:	31 05       	cpc	r19, r1
 1cc:	91 f7       	brne	.-28     	; 0x1b2 <.L18>

000001ce <.Loc.51>:
                        setBothStepperMode(Off);
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

000001d6 <.LBB21>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d6:	2f ef       	ldi	r18, 0xFF	; 255
 1d8:	83 ed       	ldi	r24, 0xD3	; 211
 1da:	90 e3       	ldi	r25, 0x30	; 48

000001dc <.L1^B1>:
 1dc:	21 50       	subi	r18, 0x01	; 1
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <.L1^B1>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <L0^A>

000001e6 <L0^A>:
	...

000001e8 <.Loc.60>:
	}
	else
		__ticks = (uint16_t)__tmp;
	_delay_loop_2(__ticks);
#endif
}
 1e8:	e4 cf       	rjmp	.-56     	; 0x1b2 <.L18>

000001ea <.L11>:
                        setBothStepperMode(Off);
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

000001f2 <.LBB23>:
	__builtin_avr_delay_cycles(__ticks_dc);
 1f2:	2f ef       	ldi	r18, 0xFF	; 255
 1f4:	83 ed       	ldi	r24, 0xD3	; 211
 1f6:	90 e3       	ldi	r25, 0x30	; 48

000001f8 <.L1^B2>:
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	80 40       	sbci	r24, 0x00	; 0
 1fc:	90 40       	sbci	r25, 0x00	; 0
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <.L1^B2>
 200:	00 c0       	rjmp	.+0      	; 0x202 <L0^A>

00000202 <L0^A>:
	...

00000204 <.Loc.71>:
}
 204:	d6 cf       	rjmp	.-84     	; 0x1b2 <.L18>

00000206 <filterDistance>:
int filterDistance(int distance){
 206:	28 2f       	mov	r18, r24
 208:	39 2f       	mov	r19, r25

0000020a <.Loc.74>:
    if(distance > 200){
 20a:	29 3c       	cpi	r18, 0xC9	; 201
 20c:	31 05       	cpc	r19, r1
 20e:	0c f4       	brge	.+2      	; 0x212 <.L21>
 210:	08 95       	ret

00000212 <.L21>:
        distance = 1;
 212:	81 e0       	ldi	r24, 0x01	; 1

00000214 <.Loc.77>:
 214:	90 e0       	ldi	r25, 0x00	; 0

00000216 <.Loc.78>:
    }
    return distance;
}
 216:	08 95       	ret

00000218 <followHand>:

void followHand(int distance){
 218:	28 2f       	mov	r18, r24
 21a:	39 2f       	mov	r19, r25

0000021c <.Loc.82>:
    if((distance < maxDistance) && (distance > minDistance)){
 21c:	c9 01       	movw	r24, r18

0000021e <.Loc.84>:
 21e:	42 97       	sbiw	r24, 0x12	; 18

00000220 <.Loc.85>:
 220:	05 97       	sbiw	r24, 0x05	; 5
 222:	38 f0       	brcs	.+14     	; 0x232 <.L26>

00000224 <.Loc.86>:
            setBothStepperMode(Off);
            return;
    }

    if(distance < minDistance){
 224:	21 31       	cpi	r18, 0x11	; 17
 226:	31 05       	cpc	r19, r1
 228:	4c f0       	brlt	.+18     	; 0x23c <.L27>

0000022a <.Loc.88>:
        setBothStepperMode(BackwardStep);
        return;
    }

    if(distance > maxDistance){
 22a:	28 31       	cpi	r18, 0x18	; 24
 22c:	31 05       	cpc	r19, r1
 22e:	5c f4       	brge	.+22     	; 0x246 <.L28>

00000230 <.L22>:
        setBothStepperMode(ForwardStep);
    }

}
 230:	08 95       	ret

00000232 <.L26>:
            setBothStepperMode(Off);
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

0000023a <.LVL27>:
            return;
 23a:	08 95       	ret

0000023c <.L27>:
        setBothStepperMode(BackwardStep);
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

00000244 <.LVL28>:
        return;
 244:	08 95       	ret

00000246 <.L28>:
        setBothStepperMode(ForwardStep);
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 61 01 	call	0x2c2	; 0x2c2 <setBothStepperMode>

0000024e <.LVL29>:
 24e:	f0 cf       	rjmp	.-32     	; 0x230 <.L22>

00000250 <init_delay_timer>:

void init_delay_timer(){
    // Use mode 0, clkdiv = 64
    TCCR2A = 0;
 250:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>

00000254 <.Loc.100>:
    TCCR2B = (0<<CS22) | (1<<CS21) | (1<<CS20);
 254:	83 e0       	ldi	r24, 0x03	; 3
 256:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>

0000025a <.Loc.101>:

    // Disable PWM output
    OCR2A = 0;
 25a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

0000025e <.Loc.103>:
    OCR2B = 0;
 25e:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

00000262 <.Loc.105>:

    //Overflow interrupt
    TIMSK2 = (1<<TOIE2);
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>

00000268 <.Loc.107>:
    TCNT2 = 6;
 268:	86 e0       	ldi	r24, 0x06	; 6
 26a:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>

0000026e <.Loc.109>:
}
 26e:	08 95       	ret

00000270 <setStepperMode>:
void setBothStepperMode(int mode){
    setStepperMode(leftMotor, mode);
    setStepperMode(rightMotor, mode);
}

void setStepperMode(int motor, int mode){
 270:	28 2f       	mov	r18, r24
 272:	39 2f       	mov	r19, r25
 274:	86 2f       	mov	r24, r22

00000276 <.Loc.2>:
 276:	97 2f       	mov	r25, r23

00000278 <.Loc.3>:

    int state;
    if(mode == Off){
 278:	51 e0       	ldi	r21, 0x01	; 1
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	81 30       	cpi	r24, 0x01	; 1
 27e:	91 05       	cpc	r25, r1
 280:	69 f0       	breq	.+26     	; 0x29c <.L8>

00000282 <.L2>:
        state = 1;
    }


    int** motorLoop;
    switch(motor){
 282:	2a 30       	cpi	r18, 0x0A	; 10
 284:	31 05       	cpc	r19, r1
 286:	61 f0       	breq	.+24     	; 0x2a0 <.L3>
 288:	2b 30       	cpi	r18, 0x0B	; 11
 28a:	31 05       	cpc	r19, r1
 28c:	81 f0       	breq	.+32     	; 0x2ae <.L4>

0000028e <.L5>:
            motorLoop = &rightMotorLoop;
            rightMotorEnabled = state;
            break;
    }

    switch(mode){
 28e:	02 97       	sbiw	r24, 0x02	; 2
 290:	a9 f0       	breq	.+42     	; 0x2bc <.L9>
 292:	88 e1       	ldi	r24, 0x18	; 24
 294:	92 e0       	ldi	r25, 0x02	; 2

00000296 <.L6>:
        default:
        case ForwardStep:
            *motorLoop = &LoopForward;
 296:	91 83       	std	Z+1, r25	; 0x01
 298:	80 83       	st	Z, r24

0000029a <.Loc.10>:
            break;
        case BackwardStep:
            *motorLoop = &LoopBackwards;
            break;
    }
}
 29a:	08 95       	ret

0000029c <.L8>:
    if(mode == Off){
 29c:	50 e0       	ldi	r21, 0x00	; 0
 29e:	f1 cf       	rjmp	.-30     	; 0x282 <.L2>

000002a0 <.L3>:
            leftMotorEnabled = state;
 2a0:	50 93 02 02 	sts	0x0202, r21	; 0x800202 <leftMotorEnabled>
 2a4:	40 93 03 02 	sts	0x0203, r20	; 0x800203 <leftMotorEnabled+0x1>

000002a8 <.Loc.15>:
            motorLoop = &leftMotorLoop;
 2a8:	e6 e0       	ldi	r30, 0x06	; 6
 2aa:	f2 e0       	ldi	r31, 0x02	; 2

000002ac <.Loc.17>:
            break;
 2ac:	f0 cf       	rjmp	.-32     	; 0x28e <.L5>

000002ae <.L4>:
            rightMotorEnabled = state;
 2ae:	50 93 00 02 	sts	0x0200, r21	; 0x800200 <rightMotorEnabled>
 2b2:	40 93 01 02 	sts	0x0201, r20	; 0x800201 <rightMotorEnabled+0x1>

000002b6 <.Loc.21>:
            motorLoop = &rightMotorLoop;
 2b6:	e4 e0       	ldi	r30, 0x04	; 4
 2b8:	f2 e0       	ldi	r31, 0x02	; 2

000002ba <.Loc.23>:
            break;
 2ba:	e9 cf       	rjmp	.-46     	; 0x28e <.L5>

000002bc <.L9>:
    switch(mode){
 2bc:	88 e0       	ldi	r24, 0x08	; 8
 2be:	92 e0       	ldi	r25, 0x02	; 2
 2c0:	ea cf       	rjmp	.-44     	; 0x296 <.L6>

000002c2 <setBothStepperMode>:
void setBothStepperMode(int mode){
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	d8 2f       	mov	r29, r24
 2c8:	c9 2f       	mov	r28, r25

000002ca <.Loc.27>:
    setStepperMode(leftMotor, mode);
 2ca:	68 2f       	mov	r22, r24
 2cc:	79 2f       	mov	r23, r25
 2ce:	8a e0       	ldi	r24, 0x0A	; 10
 2d0:	90 e0       	ldi	r25, 0x00	; 0

000002d2 <.Loc.28>:
 2d2:	0e 94 38 01 	call	0x270	; 0x270 <setStepperMode>

000002d6 <.LVL10>:
    setStepperMode(rightMotor, mode);
 2d6:	6d 2f       	mov	r22, r29
 2d8:	7c 2f       	mov	r23, r28
 2da:	8b e0       	ldi	r24, 0x0B	; 11
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 38 01 	call	0x270	; 0x270 <setStepperMode>

000002e2 <.LVL11>:
}
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	08 95       	ret

000002e8 <init_timer>:

//Clockspeed = 16.000.000 / 250 / 64 = 1.000
#define Clockspeed 1000
void init_timer(){
    // Use mode 0, clkdiv = 64
    TCCR0A = 0;
 2e8:	14 bc       	out	0x24, r1	; 36

000002ea <.Loc.34>:
    TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
 2ea:	83 e0       	ldi	r24, 0x03	; 3
 2ec:	85 bd       	out	0x25, r24	; 37

000002ee <.Loc.36>:

    // Disable PWM output
    OCR0A = 0;
 2ee:	17 bc       	out	0x27, r1	; 39

000002f0 <.Loc.38>:
    OCR0B = 0;
 2f0:	18 bc       	out	0x28, r1	; 40

000002f2 <.Loc.40>:

    //Overflow interrupt
    TIMSK0 = (1<<TOIE0);
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>

000002f8 <.Loc.42>:
    TCNT0 = 6;
 2f8:	86 e0       	ldi	r24, 0x06	; 6
 2fa:	86 bd       	out	0x26, r24	; 38

000002fc <.Loc.44>:

    sei();
 2fc:	78 94       	sei

000002fe <.Loc.45>:
}
 2fe:	08 95       	ret

00000300 <initMotorpins>:
}


void initMotorpins(){
    for(int i = MotorLeftStartpin; i < MotorLeftStartpin+4; i++){
        MotorLeftDDR |= (1<<i);
 300:	80 9a       	sbi	0x10, 0	; 16

00000302 <.Loc.52>:
 302:	81 9a       	sbi	0x10, 1	; 16

00000304 <.Loc.56>:
 304:	82 9a       	sbi	0x10, 2	; 16

00000306 <.Loc.60>:
 306:	83 9a       	sbi	0x10, 3	; 16

00000308 <.LBB3>:
    }

    for(int i = MotorRightStartpin; i < MotorRightStartpin+4; i++){
        MotorRightDDR |= (1<<i);
 308:	84 9a       	sbi	0x10, 4	; 16

0000030a <.Loc.69>:
 30a:	85 9a       	sbi	0x10, 5	; 16

0000030c <.Loc.73>:
 30c:	86 9a       	sbi	0x10, 6	; 16

0000030e <.Loc.77>:
 30e:	87 9a       	sbi	0x10, 7	; 16

00000310 <.LBE3>:
    }
}
 310:	08 95       	ret

00000312 <initSteppermotorAVRDriver>:
    initMotorpins();
 312:	0e 94 80 01 	call	0x300	; 0x300 <initMotorpins>

00000316 <.LVL21>:
    setStepperMode(leftMotor, ForwardStep);
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	8a e0       	ldi	r24, 0x0A	; 10
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	0e 94 38 01 	call	0x270	; 0x270 <setStepperMode>

00000322 <.LVL22>:
    init_timer();
 322:	0e 94 74 01 	call	0x2e8	; 0x2e8 <init_timer>

00000326 <.LVL23>:
}
 326:	08 95       	ret

00000328 <LeftStepperNextStep>:

void LeftStepperNextStep(){
    static int position = 0;
    MotorLeftPort &= ~(0b1111<< MotorLeftStartpin);
 328:	81 b3       	in	r24, 0x11	; 17
 32a:	80 7f       	andi	r24, 0xF0	; 240
 32c:	81 bb       	out	0x11, r24	; 17

0000032e <.Loc.93>:
    MotorLeftPort |= ((*leftMotorLoop)[position] << MotorLeftStartpin);
 32e:	81 b3       	in	r24, 0x11	; 17

00000330 <.Loc.94>:
 330:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <leftMotorLoop>
 334:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <leftMotorLoop+0x1>
 338:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <position.1>
 33c:	30 91 33 02 	lds	r19, 0x0233	; 0x800233 <position.1+0x1>
 340:	22 0f       	add	r18, r18
 342:	33 1f       	adc	r19, r19
 344:	e2 0f       	add	r30, r18
 346:	f3 1f       	adc	r31, r19

00000348 <.Loc.95>:
 348:	90 81       	ld	r25, Z
 34a:	89 2b       	or	r24, r25
 34c:	81 bb       	out	0x11, r24	; 17

0000034e <.Loc.96>:
    position++;
 34e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <position.1>
 352:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <position.1+0x1>
 356:	9c 01       	movw	r18, r24
 358:	2f 5f       	subi	r18, 0xFF	; 255
 35a:	3f 4f       	sbci	r19, 0xFF	; 255

0000035c <.Loc.98>:
    if(position == LoopLength) position = 0;
 35c:	07 97       	sbiw	r24, 0x07	; 7
 35e:	29 f0       	breq	.+10     	; 0x36a <.L17>

00000360 <.L15>:
    position++;
 360:	30 93 33 02 	sts	0x0233, r19	; 0x800233 <position.1+0x1>
 364:	20 93 32 02 	sts	0x0232, r18	; 0x800232 <position.1>

00000368 <.Loc.101>:
}
 368:	08 95       	ret

0000036a <.L17>:
 36a:	20 e0       	ldi	r18, 0x00	; 0
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	f8 cf       	rjmp	.-16     	; 0x360 <.L15>

00000370 <RightStepperNextStep>:

void RightStepperNextStep(){
    static int position = 0;
    MotorRightPort &= ~(0b1111<<MotorRightStartpin);
 370:	81 b3       	in	r24, 0x11	; 17
 372:	8f 70       	andi	r24, 0x0F	; 15
 374:	81 bb       	out	0x11, r24	; 17

00000376 <.Loc.106>:
    MotorRightPort |= ((*rightMotorLoop)[position] << MotorRightStartpin);
 376:	81 b3       	in	r24, 0x11	; 17

00000378 <.Loc.107>:
 378:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <rightMotorLoop>
 37c:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <rightMotorLoop+0x1>
 380:	20 91 30 02 	lds	r18, 0x0230	; 0x800230 <position.0>
 384:	30 91 31 02 	lds	r19, 0x0231	; 0x800231 <position.0+0x1>
 388:	22 0f       	add	r18, r18
 38a:	33 1f       	adc	r19, r19
 38c:	e2 0f       	add	r30, r18
 38e:	f3 1f       	adc	r31, r19

00000390 <.Loc.108>:
 390:	20 81       	ld	r18, Z
 392:	31 81       	ldd	r19, Z+1	; 0x01
 394:	22 95       	swap	r18
 396:	32 95       	swap	r19
 398:	30 7f       	andi	r19, 0xF0	; 240
 39a:	32 27       	eor	r19, r18
 39c:	20 7f       	andi	r18, 0xF0	; 240
 39e:	32 27       	eor	r19, r18

000003a0 <.Loc.109>:
 3a0:	82 2b       	or	r24, r18
 3a2:	81 bb       	out	0x11, r24	; 17

000003a4 <.Loc.110>:
    position++;
 3a4:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <position.0>
 3a8:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <position.0+0x1>
 3ac:	9c 01       	movw	r18, r24
 3ae:	2f 5f       	subi	r18, 0xFF	; 255
 3b0:	3f 4f       	sbci	r19, 0xFF	; 255

000003b2 <.Loc.112>:
    if(position == LoopLength) position = 0;
 3b2:	07 97       	sbiw	r24, 0x07	; 7
 3b4:	29 f0       	breq	.+10     	; 0x3c0 <.L21>

000003b6 <.L19>:
    position++;
 3b6:	30 93 31 02 	sts	0x0231, r19	; 0x800231 <position.0+0x1>
 3ba:	20 93 30 02 	sts	0x0230, r18	; 0x800230 <position.0>

000003be <.Loc.115>:
}
 3be:	08 95       	ret

000003c0 <.L21>:
 3c0:	20 e0       	ldi	r18, 0x00	; 0
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	f8 cf       	rjmp	.-16     	; 0x3b6 <.L19>

000003c6 <__vector_23>:


ISR(TIMER0_OVF_vect){
 3c6:	1f 92       	push	r1
 3c8:	0f 92       	push	r0
 3ca:	0f b6       	in	r0, 0x3f	; 63
 3cc:	0f 92       	push	r0
 3ce:	11 24       	eor	r1, r1
 3d0:	0b b6       	in	r0, 0x3b	; 59
 3d2:	0f 92       	push	r0
 3d4:	2f 93       	push	r18
 3d6:	3f 93       	push	r19
 3d8:	4f 93       	push	r20
 3da:	5f 93       	push	r21
 3dc:	6f 93       	push	r22
 3de:	7f 93       	push	r23
 3e0:	8f 93       	push	r24
 3e2:	9f 93       	push	r25
 3e4:	af 93       	push	r26
 3e6:	bf 93       	push	r27
 3e8:	ef 93       	push	r30
 3ea:	ff 93       	push	r31

000003ec <.Loc.117>:
    if(leftMotorEnabled) LeftStepperNextStep();
 3ec:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <leftMotorEnabled>
 3f0:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <leftMotorEnabled+0x1>
 3f4:	89 2b       	or	r24, r25
 3f6:	d9 f4       	brne	.+54     	; 0x42e <.L25>

000003f8 <.L23>:
    if(rightMotorEnabled) RightStepperNextStep();
 3f8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <rightMotorEnabled>
 3fc:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <rightMotorEnabled+0x1>
 400:	89 2b       	or	r24, r25
 402:	c1 f4       	brne	.+48     	; 0x434 <.L26>

00000404 <.L24>:

    TCNT0 = 6;
 404:	86 e0       	ldi	r24, 0x06	; 6
 406:	86 bd       	out	0x26, r24	; 38

00000408 <.Loc.123>:
}
 408:	ff 91       	pop	r31
 40a:	ef 91       	pop	r30
 40c:	bf 91       	pop	r27
 40e:	af 91       	pop	r26
 410:	9f 91       	pop	r25
 412:	8f 91       	pop	r24
 414:	7f 91       	pop	r23
 416:	6f 91       	pop	r22
 418:	5f 91       	pop	r21
 41a:	4f 91       	pop	r20
 41c:	3f 91       	pop	r19
 41e:	2f 91       	pop	r18
 420:	0f 90       	pop	r0
 422:	0b be       	out	0x3b, r0	; 59
 424:	0f 90       	pop	r0
 426:	0f be       	out	0x3f, r0	; 63
 428:	0f 90       	pop	r0
 42a:	1f 90       	pop	r1
 42c:	18 95       	reti

0000042e <.L25>:
    if(leftMotorEnabled) LeftStepperNextStep();
 42e:	0e 94 94 01 	call	0x328	; 0x328 <LeftStepperNextStep>

00000432 <.LVL24>:
 432:	e2 cf       	rjmp	.-60     	; 0x3f8 <.L23>

00000434 <.L26>:
    if(rightMotorEnabled) RightStepperNextStep();
 434:	0e 94 b8 01 	call	0x370	; 0x370 <RightStepperNextStep>

00000438 <.LVL25>:
 438:	e5 cf       	rjmp	.-54     	; 0x404 <.L24>

0000043a <agv_ultrasoon_init>:
volatile uint16_t agv_ultrasoon_voor_midden = 0;
volatile uint8_t agv_ultrasoon_current_sensor = 2;

void agv_ultrasoon_init()
{
    cli();
 43a:	f8 94       	cli

0000043c <.Loc.2>:
    TCCR3A |= (1<<COM3A1) | (1<<WGM31);
 43c:	e0 e9       	ldi	r30, 0x90	; 144
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z

00000442 <.Loc.3>:
 442:	82 68       	ori	r24, 0x82	; 130
 444:	80 83       	st	Z, r24

00000446 <.Loc.4>:
    TCCR3B |= (1<<WGM33) | (1<<CS31) | (1<<WGM32);//wgm33 wgm32 wgm31
 446:	e1 e9       	ldi	r30, 0x91	; 145
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z

0000044c <.Loc.5>:
 44c:	8a 61       	ori	r24, 0x1A	; 26
 44e:	80 83       	st	Z, r24

00000450 <.Loc.6>:
    ICR3 = 32768;
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	90 e8       	ldi	r25, 0x80	; 128
 454:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
 458:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

0000045c <.Loc.8>:
    OCR3A = 20;//10microsec
 45c:	84 e1       	ldi	r24, 0x14	; 20
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 464:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>

00000468 <.Loc.10>:
    OCR3B = 5500;// (10microsec + 480microsec+ marge) *2
 468:	8c e7       	ldi	r24, 0x7C	; 124
 46a:	95 e1       	ldi	r25, 0x15	; 21
 46c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
 470:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>

00000474 <.Loc.12>:
    DDRE |= (1<<PE3);
 474:	6b 9a       	sbi	0x0d, 3	; 13

00000476 <.Loc.14>:
    TIMSK3 |= (1<<ICIE3) | (1<<OCIE3B);
 476:	e1 e7       	ldi	r30, 0x71	; 113
 478:	f0 e0       	ldi	r31, 0x00	; 0
 47a:	80 81       	ld	r24, Z

0000047c <.Loc.15>:
 47c:	84 62       	ori	r24, 0x24	; 36
 47e:	80 83       	st	Z, r24

00000480 <.Loc.16>:
    //pin change interrupt:
    PCICR |= (1<<PCIE2);//enables pci 16 tot 23
 480:	e8 e6       	ldi	r30, 0x68	; 104
 482:	f0 e0       	ldi	r31, 0x00	; 0
 484:	80 81       	ld	r24, Z

00000486 <.Loc.17>:
 486:	84 60       	ori	r24, 0x04	; 4
 488:	80 83       	st	Z, r24

0000048a <.Loc.18>:
    sei();
 48a:	78 94       	sei

0000048c <.Loc.19>:
}
 48c:	08 95       	ret

0000048e <__vector_33>:

ISR(TIMER3_COMPB_vect)
{
 48e:	8f 93       	push	r24
 490:	8f b7       	in	r24, 0x3f	; 63
 492:	8f 93       	push	r24
 494:	8b b7       	in	r24, 0x3b	; 59
 496:	8f 93       	push	r24
 498:	ef 93       	push	r30
 49a:	ff 93       	push	r31

0000049c <.Loc.21>:
    agv_ultrasoon_current_sensor = (agv_ultrasoon_current_sensor<<1);
 49c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>
 4a0:	88 0f       	add	r24, r24

000004a2 <.Loc.23>:
 4a2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <agv_ultrasoon_current_sensor>

000004a6 <.Loc.24>:
    if (agv_ultrasoon_current_sensor == (1<<6))//0b00100000
 4a6:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000004aa <.Loc.26>:
 4aa:	80 34       	cpi	r24, 0x40	; 64
 4ac:	89 f0       	breq	.+34     	; 0x4d0 <.L4>

000004ae <.L3>:
    {
        agv_ultrasoon_current_sensor = 2;

    }
    PCMSK2 = agv_ultrasoon_current_sensor;
 4ae:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>
 4b2:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x70006d>

000004b6 <.Loc.29>:
    //PORTA = agv_ultrasoon_current_sensor;
    TIMSK3 |= (1<<OCIE3B);
 4b6:	e1 e7       	ldi	r30, 0x71	; 113
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	80 81       	ld	r24, Z

000004bc <.Loc.30>:
 4bc:	84 60       	ori	r24, 0x04	; 4
 4be:	80 83       	st	Z, r24

000004c0 <.Loc.31>:
}
 4c0:	ff 91       	pop	r31
 4c2:	ef 91       	pop	r30
 4c4:	8f 91       	pop	r24
 4c6:	8b bf       	out	0x3b, r24	; 59
 4c8:	8f 91       	pop	r24
 4ca:	8f bf       	out	0x3f, r24	; 63
 4cc:	8f 91       	pop	r24
 4ce:	18 95       	reti

000004d0 <.L4>:
        agv_ultrasoon_current_sensor = 2;
 4d0:	82 e0       	ldi	r24, 0x02	; 2
 4d2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <agv_ultrasoon_current_sensor>
 4d6:	eb cf       	rjmp	.-42     	; 0x4ae <.L3>

000004d8 <__vector_31>:

ISR(TIMER3_CAPT_vect)
{
 4d8:	1f 92       	push	r1
 4da:	0f 92       	push	r0
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	0f 92       	push	r0
 4e0:	11 24       	eor	r1, r1
 4e2:	0b b6       	in	r0, 0x3b	; 59
 4e4:	0f 92       	push	r0
 4e6:	2f 93       	push	r18
 4e8:	3f 93       	push	r19
 4ea:	4f 93       	push	r20
 4ec:	5f 93       	push	r21
 4ee:	6f 93       	push	r22
 4f0:	7f 93       	push	r23
 4f2:	8f 93       	push	r24
 4f4:	9f 93       	push	r25
 4f6:	af 93       	push	r26
 4f8:	bf 93       	push	r27
 4fa:	ef 93       	push	r30
 4fc:	ff 93       	push	r31
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	00 d0       	rcall	.+0      	; 0x504 <L0^A>

00000504 <L0^A>:
 504:	0f 92       	push	r0
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62

0000050a <.Loc.35>:
    //zet max naar sensorwaarde
    if(agv_ultrasoon_current_sensor == 0b00000010)
 50a:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

0000050e <.Loc.37>:
 50e:	82 30       	cpi	r24, 0x02	; 2
 510:	f1 f1       	breq	.+124    	; 0x58e <.L9>

00000512 <.Loc.38>:
    {
        agv_ultrasoon_boom_rechts = (ICR3 - 4454)/4*0.0343;
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
 512:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

00000516 <.Loc.40>:
 516:	84 30       	cpi	r24, 0x04	; 4
 518:	09 f4       	brne	.+2      	; 0x51c <.Loc.41>

0000051a <L0^A>:
 51a:	87 c0       	rjmp	.+270    	; 0x62a <.L10>

0000051c <.Loc.41>:
    {
        agv_ultrasoon_boom_links = (ICR3 - 4454)/4*0.0343;
    }
    else if(agv_ultrasoon_current_sensor == 0b00010000)
 51c:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

00000520 <.Loc.43>:
 520:	80 31       	cpi	r24, 0x10	; 16
 522:	09 f0       	breq	.+2      	; 0x526 <.Loc.44>

00000524 <L0^A>:
 524:	67 c0       	rjmp	.+206    	; 0x5f4 <.L7>

00000526 <.Loc.44>:
    {
        agv_ultrasoon_voor_midden = (ICR3 - 4454)/4*0.0343;
 526:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
 52a:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>

0000052e <.Loc.46>:
 52e:	86 56       	subi	r24, 0x66	; 102
 530:	91 41       	sbci	r25, 0x11	; 17

00000532 <.Loc.47>:
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	96 95       	lsr	r25
 538:	87 95       	ror	r24

0000053a <.Loc.48>:
 53a:	9c 01       	movw	r18, r24
 53c:	40 e0       	ldi	r20, 0x00	; 0
 53e:	50 e0       	ldi	r21, 0x00	; 0
 540:	29 83       	std	Y+1, r18	; 0x01
 542:	3a 83       	std	Y+2, r19	; 0x02
 544:	4b 83       	std	Y+3, r20	; 0x03
 546:	5c 83       	std	Y+4, r21	; 0x04
 548:	ca 01       	movw	r24, r20
 54a:	b9 01       	movw	r22, r18
 54c:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__floatunsisf>

00000550 <.LVL0>:
 550:	28 e2       	ldi	r18, 0x28	; 40
 552:	3e e7       	ldi	r19, 0x7E	; 126
 554:	4c e0       	ldi	r20, 0x0C	; 12
 556:	5d e3       	ldi	r21, 0x3D	; 61
 558:	69 83       	std	Y+1, r22	; 0x01
 55a:	7a 83       	std	Y+2, r23	; 0x02
 55c:	8b 83       	std	Y+3, r24	; 0x03
 55e:	9c 83       	std	Y+4, r25	; 0x04
 560:	69 81       	ldd	r22, Y+1	; 0x01
 562:	7a 81       	ldd	r23, Y+2	; 0x02
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	9c 81       	ldd	r25, Y+4	; 0x04
 568:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>

0000056c <.LVL1>:
 56c:	69 83       	std	Y+1, r22	; 0x01
 56e:	7a 83       	std	Y+2, r23	; 0x02
 570:	8b 83       	std	Y+3, r24	; 0x03
 572:	9c 83       	std	Y+4, r25	; 0x04
 574:	69 81       	ldd	r22, Y+1	; 0x01
 576:	7a 81       	ldd	r23, Y+2	; 0x02
 578:	8b 81       	ldd	r24, Y+3	; 0x03
 57a:	9c 81       	ldd	r25, Y+4	; 0x04
 57c:	0e 94 2f 04 	call	0x85e	; 0x85e <__fixunssfsi>

00000580 <.LVL2>:
 580:	46 2f       	mov	r20, r22
 582:	57 2f       	mov	r21, r23
 584:	50 93 35 02 	sts	0x0235, r21	; 0x800235 <agv_ultrasoon_voor_midden+0x1>
 588:	40 93 34 02 	sts	0x0234, r20	; 0x800234 <agv_ultrasoon_voor_midden>
 58c:	33 c0       	rjmp	.+102    	; 0x5f4 <.L7>

0000058e <.L9>:
        agv_ultrasoon_boom_rechts = (ICR3 - 4454)/4*0.0343;
 58e:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
 592:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>

00000596 <.Loc.52>:
 596:	86 56       	subi	r24, 0x66	; 102
 598:	91 41       	sbci	r25, 0x11	; 17

0000059a <.Loc.53>:
 59a:	96 95       	lsr	r25
 59c:	87 95       	ror	r24
 59e:	96 95       	lsr	r25
 5a0:	87 95       	ror	r24

000005a2 <.Loc.54>:
 5a2:	9c 01       	movw	r18, r24
 5a4:	40 e0       	ldi	r20, 0x00	; 0
 5a6:	50 e0       	ldi	r21, 0x00	; 0
 5a8:	29 83       	std	Y+1, r18	; 0x01
 5aa:	3a 83       	std	Y+2, r19	; 0x02
 5ac:	4b 83       	std	Y+3, r20	; 0x03
 5ae:	5c 83       	std	Y+4, r21	; 0x04
 5b0:	ca 01       	movw	r24, r20
 5b2:	b9 01       	movw	r22, r18
 5b4:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__floatunsisf>

000005b8 <.LVL3>:
 5b8:	28 e2       	ldi	r18, 0x28	; 40
 5ba:	3e e7       	ldi	r19, 0x7E	; 126
 5bc:	4c e0       	ldi	r20, 0x0C	; 12
 5be:	5d e3       	ldi	r21, 0x3D	; 61
 5c0:	69 83       	std	Y+1, r22	; 0x01
 5c2:	7a 83       	std	Y+2, r23	; 0x02
 5c4:	8b 83       	std	Y+3, r24	; 0x03
 5c6:	9c 83       	std	Y+4, r25	; 0x04
 5c8:	69 81       	ldd	r22, Y+1	; 0x01
 5ca:	7a 81       	ldd	r23, Y+2	; 0x02
 5cc:	8b 81       	ldd	r24, Y+3	; 0x03
 5ce:	9c 81       	ldd	r25, Y+4	; 0x04
 5d0:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>

000005d4 <.LVL4>:
 5d4:	69 83       	std	Y+1, r22	; 0x01
 5d6:	7a 83       	std	Y+2, r23	; 0x02
 5d8:	8b 83       	std	Y+3, r24	; 0x03
 5da:	9c 83       	std	Y+4, r25	; 0x04
 5dc:	69 81       	ldd	r22, Y+1	; 0x01
 5de:	7a 81       	ldd	r23, Y+2	; 0x02
 5e0:	8b 81       	ldd	r24, Y+3	; 0x03
 5e2:	9c 81       	ldd	r25, Y+4	; 0x04
 5e4:	0e 94 2f 04 	call	0x85e	; 0x85e <__fixunssfsi>

000005e8 <.LVL5>:
 5e8:	46 2f       	mov	r20, r22
 5ea:	57 2f       	mov	r21, r23
 5ec:	50 93 37 02 	sts	0x0237, r21	; 0x800237 <agv_ultrasoon_boom_rechts+0x1>
 5f0:	40 93 36 02 	sts	0x0236, r20	; 0x800236 <agv_ultrasoon_boom_rechts>

000005f4 <.L7>:
    }
    PCMSK2 = 0;
 5f4:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x70006d>

000005f8 <.Loc.58>:

}
 5f8:	0f 90       	pop	r0
 5fa:	0f 90       	pop	r0
 5fc:	0f 90       	pop	r0
 5fe:	0f 90       	pop	r0
 600:	df 91       	pop	r29
 602:	cf 91       	pop	r28
 604:	ff 91       	pop	r31
 606:	ef 91       	pop	r30
 608:	bf 91       	pop	r27
 60a:	af 91       	pop	r26
 60c:	9f 91       	pop	r25
 60e:	8f 91       	pop	r24
 610:	7f 91       	pop	r23
 612:	6f 91       	pop	r22
 614:	5f 91       	pop	r21
 616:	4f 91       	pop	r20
 618:	3f 91       	pop	r19
 61a:	2f 91       	pop	r18
 61c:	0f 90       	pop	r0
 61e:	0b be       	out	0x3b, r0	; 59
 620:	0f 90       	pop	r0
 622:	0f be       	out	0x3f, r0	; 63
 624:	0f 90       	pop	r0
 626:	1f 90       	pop	r1
 628:	18 95       	reti

0000062a <.L10>:
        agv_ultrasoon_boom_links = (ICR3 - 4454)/4*0.0343;
 62a:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>
 62e:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>

00000632 <.Loc.61>:
 632:	86 56       	subi	r24, 0x66	; 102
 634:	91 41       	sbci	r25, 0x11	; 17

00000636 <.Loc.62>:
 636:	96 95       	lsr	r25
 638:	87 95       	ror	r24
 63a:	96 95       	lsr	r25
 63c:	87 95       	ror	r24

0000063e <.Loc.63>:
 63e:	9c 01       	movw	r18, r24
 640:	40 e0       	ldi	r20, 0x00	; 0
 642:	50 e0       	ldi	r21, 0x00	; 0
 644:	29 83       	std	Y+1, r18	; 0x01
 646:	3a 83       	std	Y+2, r19	; 0x02
 648:	4b 83       	std	Y+3, r20	; 0x03
 64a:	5c 83       	std	Y+4, r21	; 0x04
 64c:	ca 01       	movw	r24, r20
 64e:	b9 01       	movw	r22, r18
 650:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__floatunsisf>

00000654 <.LVL6>:
 654:	28 e2       	ldi	r18, 0x28	; 40
 656:	3e e7       	ldi	r19, 0x7E	; 126
 658:	4c e0       	ldi	r20, 0x0C	; 12
 65a:	5d e3       	ldi	r21, 0x3D	; 61
 65c:	69 83       	std	Y+1, r22	; 0x01
 65e:	7a 83       	std	Y+2, r23	; 0x02
 660:	8b 83       	std	Y+3, r24	; 0x03
 662:	9c 83       	std	Y+4, r25	; 0x04
 664:	69 81       	ldd	r22, Y+1	; 0x01
 666:	7a 81       	ldd	r23, Y+2	; 0x02
 668:	8b 81       	ldd	r24, Y+3	; 0x03
 66a:	9c 81       	ldd	r25, Y+4	; 0x04
 66c:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>

00000670 <.LVL7>:
 670:	69 83       	std	Y+1, r22	; 0x01
 672:	7a 83       	std	Y+2, r23	; 0x02
 674:	8b 83       	std	Y+3, r24	; 0x03
 676:	9c 83       	std	Y+4, r25	; 0x04
 678:	69 81       	ldd	r22, Y+1	; 0x01
 67a:	7a 81       	ldd	r23, Y+2	; 0x02
 67c:	8b 81       	ldd	r24, Y+3	; 0x03
 67e:	9c 81       	ldd	r25, Y+4	; 0x04
 680:	0e 94 2f 04 	call	0x85e	; 0x85e <__fixunssfsi>

00000684 <.LVL8>:
 684:	46 2f       	mov	r20, r22
 686:	57 2f       	mov	r21, r23
 688:	50 93 39 02 	sts	0x0239, r21	; 0x800239 <agv_ultrasoon_boom_links+0x1>
 68c:	40 93 38 02 	sts	0x0238, r20	; 0x800238 <agv_ultrasoon_boom_links>
 690:	b1 cf       	rjmp	.-158    	; 0x5f4 <.L7>

00000692 <__vector_11>:

ISR(PCINT2_vect)
{
 692:	1f 92       	push	r1
 694:	0f 92       	push	r0
 696:	0f b6       	in	r0, 0x3f	; 63
 698:	0f 92       	push	r0
 69a:	11 24       	eor	r1, r1
 69c:	0b b6       	in	r0, 0x3b	; 59
 69e:	0f 92       	push	r0
 6a0:	2f 93       	push	r18
 6a2:	3f 93       	push	r19
 6a4:	4f 93       	push	r20
 6a6:	5f 93       	push	r21
 6a8:	6f 93       	push	r22
 6aa:	7f 93       	push	r23
 6ac:	8f 93       	push	r24
 6ae:	9f 93       	push	r25
 6b0:	af 93       	push	r26
 6b2:	bf 93       	push	r27
 6b4:	ef 93       	push	r30
 6b6:	ff 93       	push	r31
 6b8:	cf 93       	push	r28
 6ba:	df 93       	push	r29
 6bc:	00 d0       	rcall	.+0      	; 0x6be <L0^A>

000006be <L0^A>:
 6be:	0f 92       	push	r0
 6c0:	cd b7       	in	r28, 0x3d	; 61
 6c2:	de b7       	in	r29, 0x3e	; 62

000006c4 <.Loc.66>:
    if(agv_ultrasoon_current_sensor == 0b00000010)
 6c4:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000006c8 <.Loc.68>:
 6c8:	82 30       	cpi	r24, 0x02	; 2
 6ca:	09 f4       	brne	.+2      	; 0x6ce <.Loc.69>

000006cc <L0^A>:
 6cc:	3f c0       	rjmp	.+126    	; 0x74c <.L15>

000006ce <.Loc.69>:
    {
        agv_ultrasoon_boom_rechts = (TCNT3 - 4454)/4*0.0343;
        PORTA &= ~(0b00000001);
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
 6ce:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000006d2 <.Loc.71>:
 6d2:	84 30       	cpi	r24, 0x04	; 4
 6d4:	09 f4       	brne	.+2      	; 0x6d8 <.Loc.72>

000006d6 <L0^A>:
 6d6:	8e c0       	rjmp	.+284    	; 0x7f4 <.L16>

000006d8 <.Loc.72>:
    {
        agv_ultrasoon_boom_links = (TCNT3 - 4454)/4*0.0343;
        PORTA &= ~(0b00000010);
    }
    else if(agv_ultrasoon_current_sensor == 0b00010000)
 6d8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <agv_ultrasoon_current_sensor>

000006dc <.Loc.74>:
 6dc:	80 31       	cpi	r24, 0x10	; 16
 6de:	09 f0       	breq	.+2      	; 0x6e2 <.Loc.75>

000006e0 <L0^A>:
 6e0:	69 c0       	rjmp	.+210    	; 0x7b4 <.L13>

000006e2 <.Loc.75>:
    {
        agv_ultrasoon_voor_midden = (TCNT3 - 4454)/4*0.0343;
 6e2:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 6e6:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>

000006ea <.Loc.77>:
 6ea:	86 56       	subi	r24, 0x66	; 102
 6ec:	91 41       	sbci	r25, 0x11	; 17

000006ee <.Loc.78>:
 6ee:	96 95       	lsr	r25
 6f0:	87 95       	ror	r24
 6f2:	96 95       	lsr	r25
 6f4:	87 95       	ror	r24

000006f6 <.Loc.79>:
 6f6:	9c 01       	movw	r18, r24
 6f8:	40 e0       	ldi	r20, 0x00	; 0
 6fa:	50 e0       	ldi	r21, 0x00	; 0
 6fc:	29 83       	std	Y+1, r18	; 0x01
 6fe:	3a 83       	std	Y+2, r19	; 0x02
 700:	4b 83       	std	Y+3, r20	; 0x03
 702:	5c 83       	std	Y+4, r21	; 0x04
 704:	ca 01       	movw	r24, r20
 706:	b9 01       	movw	r22, r18
 708:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__floatunsisf>

0000070c <.LVL9>:
 70c:	28 e2       	ldi	r18, 0x28	; 40
 70e:	3e e7       	ldi	r19, 0x7E	; 126
 710:	4c e0       	ldi	r20, 0x0C	; 12
 712:	5d e3       	ldi	r21, 0x3D	; 61
 714:	69 83       	std	Y+1, r22	; 0x01
 716:	7a 83       	std	Y+2, r23	; 0x02
 718:	8b 83       	std	Y+3, r24	; 0x03
 71a:	9c 83       	std	Y+4, r25	; 0x04
 71c:	69 81       	ldd	r22, Y+1	; 0x01
 71e:	7a 81       	ldd	r23, Y+2	; 0x02
 720:	8b 81       	ldd	r24, Y+3	; 0x03
 722:	9c 81       	ldd	r25, Y+4	; 0x04
 724:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>

00000728 <.LVL10>:
 728:	69 83       	std	Y+1, r22	; 0x01
 72a:	7a 83       	std	Y+2, r23	; 0x02
 72c:	8b 83       	std	Y+3, r24	; 0x03
 72e:	9c 83       	std	Y+4, r25	; 0x04
 730:	69 81       	ldd	r22, Y+1	; 0x01
 732:	7a 81       	ldd	r23, Y+2	; 0x02
 734:	8b 81       	ldd	r24, Y+3	; 0x03
 736:	9c 81       	ldd	r25, Y+4	; 0x04
 738:	0e 94 2f 04 	call	0x85e	; 0x85e <__fixunssfsi>

0000073c <.LVL11>:
 73c:	46 2f       	mov	r20, r22
 73e:	57 2f       	mov	r21, r23
 740:	50 93 35 02 	sts	0x0235, r21	; 0x800235 <agv_ultrasoon_voor_midden+0x1>
 744:	40 93 34 02 	sts	0x0234, r20	; 0x800234 <agv_ultrasoon_voor_midden>

00000748 <.Loc.81>:
        PORTA &= ~(0b00001000);
 748:	13 98       	cbi	0x02, 3	; 2
 74a:	34 c0       	rjmp	.+104    	; 0x7b4 <.L13>

0000074c <.L15>:
        agv_ultrasoon_boom_rechts = (TCNT3 - 4454)/4*0.0343;
 74c:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 750:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>

00000754 <.Loc.85>:
 754:	86 56       	subi	r24, 0x66	; 102
 756:	91 41       	sbci	r25, 0x11	; 17

00000758 <.Loc.86>:
 758:	96 95       	lsr	r25
 75a:	87 95       	ror	r24
 75c:	96 95       	lsr	r25
 75e:	87 95       	ror	r24

00000760 <.Loc.87>:
 760:	9c 01       	movw	r18, r24
 762:	40 e0       	ldi	r20, 0x00	; 0
 764:	50 e0       	ldi	r21, 0x00	; 0
 766:	29 83       	std	Y+1, r18	; 0x01
 768:	3a 83       	std	Y+2, r19	; 0x02
 76a:	4b 83       	std	Y+3, r20	; 0x03
 76c:	5c 83       	std	Y+4, r21	; 0x04
 76e:	ca 01       	movw	r24, r20
 770:	b9 01       	movw	r22, r18
 772:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__floatunsisf>

00000776 <.LVL12>:
 776:	28 e2       	ldi	r18, 0x28	; 40
 778:	3e e7       	ldi	r19, 0x7E	; 126
 77a:	4c e0       	ldi	r20, 0x0C	; 12
 77c:	5d e3       	ldi	r21, 0x3D	; 61
 77e:	69 83       	std	Y+1, r22	; 0x01
 780:	7a 83       	std	Y+2, r23	; 0x02
 782:	8b 83       	std	Y+3, r24	; 0x03
 784:	9c 83       	std	Y+4, r25	; 0x04
 786:	69 81       	ldd	r22, Y+1	; 0x01
 788:	7a 81       	ldd	r23, Y+2	; 0x02
 78a:	8b 81       	ldd	r24, Y+3	; 0x03
 78c:	9c 81       	ldd	r25, Y+4	; 0x04
 78e:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>

00000792 <.LVL13>:
 792:	69 83       	std	Y+1, r22	; 0x01
 794:	7a 83       	std	Y+2, r23	; 0x02
 796:	8b 83       	std	Y+3, r24	; 0x03
 798:	9c 83       	std	Y+4, r25	; 0x04
 79a:	69 81       	ldd	r22, Y+1	; 0x01
 79c:	7a 81       	ldd	r23, Y+2	; 0x02
 79e:	8b 81       	ldd	r24, Y+3	; 0x03
 7a0:	9c 81       	ldd	r25, Y+4	; 0x04
 7a2:	0e 94 2f 04 	call	0x85e	; 0x85e <__fixunssfsi>

000007a6 <.LVL14>:
 7a6:	46 2f       	mov	r20, r22
 7a8:	57 2f       	mov	r21, r23
 7aa:	50 93 37 02 	sts	0x0237, r21	; 0x800237 <agv_ultrasoon_boom_rechts+0x1>
 7ae:	40 93 36 02 	sts	0x0236, r20	; 0x800236 <agv_ultrasoon_boom_rechts>

000007b2 <.Loc.89>:
        PORTA &= ~(0b00000001);
 7b2:	10 98       	cbi	0x02, 0	; 2

000007b4 <.L13>:
    }
    //check welke sensor en schrijf timer3 waarde naar sensorwaarde
    TIMSK3 &= ~(1<<ICIE3);
 7b4:	e1 e7       	ldi	r30, 0x71	; 113
 7b6:	f0 e0       	ldi	r31, 0x00	; 0
 7b8:	80 81       	ld	r24, Z
 7ba:	8f 7d       	andi	r24, 0xDF	; 223
 7bc:	80 83       	st	Z, r24

000007be <.Loc.93>:
    //zet timer3 overflow flag uit
    PCMSK2 = 0;
 7be:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x70006d>

000007c2 <.Loc.95>:
}
 7c2:	0f 90       	pop	r0
 7c4:	0f 90       	pop	r0
 7c6:	0f 90       	pop	r0
 7c8:	0f 90       	pop	r0
 7ca:	df 91       	pop	r29
 7cc:	cf 91       	pop	r28
 7ce:	ff 91       	pop	r31
 7d0:	ef 91       	pop	r30
 7d2:	bf 91       	pop	r27
 7d4:	af 91       	pop	r26
 7d6:	9f 91       	pop	r25
 7d8:	8f 91       	pop	r24
 7da:	7f 91       	pop	r23
 7dc:	6f 91       	pop	r22
 7de:	5f 91       	pop	r21
 7e0:	4f 91       	pop	r20
 7e2:	3f 91       	pop	r19
 7e4:	2f 91       	pop	r18
 7e6:	0f 90       	pop	r0
 7e8:	0b be       	out	0x3b, r0	; 59
 7ea:	0f 90       	pop	r0
 7ec:	0f be       	out	0x3f, r0	; 63
 7ee:	0f 90       	pop	r0
 7f0:	1f 90       	pop	r1
 7f2:	18 95       	reti

000007f4 <.L16>:
        agv_ultrasoon_boom_links = (TCNT3 - 4454)/4*0.0343;
 7f4:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 7f8:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>

000007fc <.Loc.98>:
 7fc:	86 56       	subi	r24, 0x66	; 102
 7fe:	91 41       	sbci	r25, 0x11	; 17

00000800 <.Loc.99>:
 800:	96 95       	lsr	r25
 802:	87 95       	ror	r24
 804:	96 95       	lsr	r25
 806:	87 95       	ror	r24

00000808 <.Loc.100>:
 808:	9c 01       	movw	r18, r24
 80a:	40 e0       	ldi	r20, 0x00	; 0
 80c:	50 e0       	ldi	r21, 0x00	; 0
 80e:	29 83       	std	Y+1, r18	; 0x01
 810:	3a 83       	std	Y+2, r19	; 0x02
 812:	4b 83       	std	Y+3, r20	; 0x03
 814:	5c 83       	std	Y+4, r21	; 0x04
 816:	ca 01       	movw	r24, r20
 818:	b9 01       	movw	r22, r18
 81a:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__floatunsisf>

0000081e <.LVL15>:
 81e:	28 e2       	ldi	r18, 0x28	; 40
 820:	3e e7       	ldi	r19, 0x7E	; 126
 822:	4c e0       	ldi	r20, 0x0C	; 12
 824:	5d e3       	ldi	r21, 0x3D	; 61
 826:	69 83       	std	Y+1, r22	; 0x01
 828:	7a 83       	std	Y+2, r23	; 0x02
 82a:	8b 83       	std	Y+3, r24	; 0x03
 82c:	9c 83       	std	Y+4, r25	; 0x04
 82e:	69 81       	ldd	r22, Y+1	; 0x01
 830:	7a 81       	ldd	r23, Y+2	; 0x02
 832:	8b 81       	ldd	r24, Y+3	; 0x03
 834:	9c 81       	ldd	r25, Y+4	; 0x04
 836:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>

0000083a <.LVL16>:
 83a:	69 83       	std	Y+1, r22	; 0x01
 83c:	7a 83       	std	Y+2, r23	; 0x02
 83e:	8b 83       	std	Y+3, r24	; 0x03
 840:	9c 83       	std	Y+4, r25	; 0x04
 842:	69 81       	ldd	r22, Y+1	; 0x01
 844:	7a 81       	ldd	r23, Y+2	; 0x02
 846:	8b 81       	ldd	r24, Y+3	; 0x03
 848:	9c 81       	ldd	r25, Y+4	; 0x04
 84a:	0e 94 2f 04 	call	0x85e	; 0x85e <__fixunssfsi>

0000084e <.LVL17>:
 84e:	46 2f       	mov	r20, r22
 850:	57 2f       	mov	r21, r23
 852:	50 93 39 02 	sts	0x0239, r21	; 0x800239 <agv_ultrasoon_boom_links+0x1>
 856:	40 93 38 02 	sts	0x0238, r20	; 0x800238 <agv_ultrasoon_boom_links>

0000085a <.Loc.102>:
        PORTA &= ~(0b00000010);
 85a:	11 98       	cbi	0x02, 1	; 2
 85c:	ab cf       	rjmp	.-170    	; 0x7b4 <.L13>

0000085e <__fixunssfsi>:
 85e:	0e 94 a3 04 	call	0x946	; 0x946 <__fp_splitA>
 862:	88 f0       	brcs	.+34     	; 0x886 <.L_err>
 864:	9f 57       	subi	r25, 0x7F	; 127
 866:	98 f0       	brcs	.+38     	; 0x88e <.L_zr>
 868:	b9 2f       	mov	r27, r25
 86a:	99 27       	eor	r25, r25
 86c:	b7 51       	subi	r27, 0x17	; 23
 86e:	b0 f0       	brcs	.+44     	; 0x89c <.L4^B1>
 870:	e1 f0       	breq	.+56     	; 0x8aa <.L_sign>

00000872 <.L1^B1>:
 872:	66 0f       	add	r22, r22
 874:	77 1f       	adc	r23, r23
 876:	88 1f       	adc	r24, r24
 878:	99 1f       	adc	r25, r25
 87a:	1a f0       	brmi	.+6      	; 0x882 <.L2^B1>
 87c:	ba 95       	dec	r27
 87e:	c9 f7       	brne	.-14     	; 0x872 <.L1^B1>
 880:	14 c0       	rjmp	.+40     	; 0x8aa <.L_sign>

00000882 <.L2^B1>:
 882:	b1 30       	cpi	r27, 0x01	; 1
 884:	91 f0       	breq	.+36     	; 0x8aa <.L_sign>

00000886 <.L_err>:
 886:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_zero>
 88a:	b1 e0       	ldi	r27, 0x01	; 1
 88c:	08 95       	ret

0000088e <.L_zr>:
 88e:	0c 94 bd 04 	jmp	0x97a	; 0x97a <__fp_zero>

00000892 <.L3^B1>:
 892:	67 2f       	mov	r22, r23
 894:	78 2f       	mov	r23, r24
 896:	88 27       	eor	r24, r24
 898:	b8 5f       	subi	r27, 0xF8	; 248
 89a:	39 f0       	breq	.+14     	; 0x8aa <.L_sign>

0000089c <.L4^B1>:
 89c:	b9 3f       	cpi	r27, 0xF9	; 249
 89e:	cc f3       	brlt	.-14     	; 0x892 <.L3^B1>

000008a0 <.L5^B1>:
 8a0:	86 95       	lsr	r24
 8a2:	77 95       	ror	r23
 8a4:	67 95       	ror	r22
 8a6:	b3 95       	inc	r27
 8a8:	d9 f7       	brne	.-10     	; 0x8a0 <.L5^B1>

000008aa <.L_sign>:
 8aa:	3e f4       	brtc	.+14     	; 0x8ba <.L6^B1>
 8ac:	90 95       	com	r25
 8ae:	80 95       	com	r24
 8b0:	70 95       	com	r23
 8b2:	61 95       	neg	r22
 8b4:	7f 4f       	sbci	r23, 0xFF	; 255
 8b6:	8f 4f       	sbci	r24, 0xFF	; 255
 8b8:	9f 4f       	sbci	r25, 0xFF	; 255

000008ba <.L6^B1>:
 8ba:	08 95       	ret

000008bc <__floatunsisf>:
 8bc:	e8 94       	clt
 8be:	09 c0       	rjmp	.+18     	; 0x8d2 <.L1^B1>

000008c0 <__floatsisf>:
 8c0:	97 fb       	bst	r25, 7
 8c2:	3e f4       	brtc	.+14     	; 0x8d2 <.L1^B1>
 8c4:	90 95       	com	r25
 8c6:	80 95       	com	r24
 8c8:	70 95       	com	r23
 8ca:	61 95       	neg	r22
 8cc:	7f 4f       	sbci	r23, 0xFF	; 255
 8ce:	8f 4f       	sbci	r24, 0xFF	; 255
 8d0:	9f 4f       	sbci	r25, 0xFF	; 255

000008d2 <.L1^B1>:
 8d2:	99 23       	and	r25, r25
 8d4:	a9 f0       	breq	.+42     	; 0x900 <.L4^B1>
 8d6:	f9 2f       	mov	r31, r25
 8d8:	96 e9       	ldi	r25, 0x96	; 150
 8da:	bb 27       	eor	r27, r27

000008dc <.L2^B1>:
 8dc:	93 95       	inc	r25
 8de:	f6 95       	lsr	r31
 8e0:	87 95       	ror	r24
 8e2:	77 95       	ror	r23
 8e4:	67 95       	ror	r22
 8e6:	b7 95       	ror	r27
 8e8:	f1 11       	cpse	r31, r1
 8ea:	f8 cf       	rjmp	.-16     	; 0x8dc <.L2^B1>
 8ec:	fa f4       	brpl	.+62     	; 0x92c <.L_pack>
 8ee:	bb 0f       	add	r27, r27
 8f0:	11 f4       	brne	.+4      	; 0x8f6 <.L3^B1>
 8f2:	60 ff       	sbrs	r22, 0
 8f4:	1b c0       	rjmp	.+54     	; 0x92c <.L_pack>

000008f6 <.L3^B1>:
 8f6:	6f 5f       	subi	r22, 0xFF	; 255
 8f8:	7f 4f       	sbci	r23, 0xFF	; 255
 8fa:	8f 4f       	sbci	r24, 0xFF	; 255
 8fc:	9f 4f       	sbci	r25, 0xFF	; 255
 8fe:	16 c0       	rjmp	.+44     	; 0x92c <.L_pack>

00000900 <.L4^B1>:
 900:	88 23       	and	r24, r24
 902:	11 f0       	breq	.+4      	; 0x908 <.L5^B1>
 904:	96 e9       	ldi	r25, 0x96	; 150
 906:	11 c0       	rjmp	.+34     	; 0x92a <.L8^B1>

00000908 <.L5^B1>:
 908:	77 23       	and	r23, r23
 90a:	21 f0       	breq	.+8      	; 0x914 <.L6^B1>
 90c:	9e e8       	ldi	r25, 0x8E	; 142
 90e:	87 2f       	mov	r24, r23
 910:	76 2f       	mov	r23, r22
 912:	05 c0       	rjmp	.+10     	; 0x91e <.L7^B1>

00000914 <.L6^B1>:
 914:	66 23       	and	r22, r22
 916:	71 f0       	breq	.+28     	; 0x934 <.L9^B1>
 918:	96 e8       	ldi	r25, 0x86	; 134
 91a:	86 2f       	mov	r24, r22
 91c:	70 e0       	ldi	r23, 0x00	; 0

0000091e <.L7^B1>:
 91e:	60 e0       	ldi	r22, 0x00	; 0
 920:	2a f0       	brmi	.+10     	; 0x92c <.L_pack>

00000922 <.L10^B1>:
 922:	9a 95       	dec	r25
 924:	66 0f       	add	r22, r22
 926:	77 1f       	adc	r23, r23
 928:	88 1f       	adc	r24, r24

0000092a <.L8^B1>:
 92a:	da f7       	brpl	.-10     	; 0x922 <.L10^B1>

0000092c <.L_pack>:
 92c:	88 0f       	add	r24, r24
 92e:	96 95       	lsr	r25
 930:	87 95       	ror	r24
 932:	97 f9       	bld	r25, 7

00000934 <.L9^B1>:
 934:	08 95       	ret

00000936 <__fp_split3>:
 936:	57 fd       	sbrc	r21, 7
 938:	90 58       	subi	r25, 0x80	; 128
 93a:	44 0f       	add	r20, r20
 93c:	55 1f       	adc	r21, r21
 93e:	59 f0       	breq	.+22     	; 0x956 <.L4^B1>
 940:	5f 3f       	cpi	r21, 0xFF	; 255
 942:	71 f0       	breq	.+28     	; 0x960 <.L5^B1>

00000944 <.L1^B1>:
 944:	47 95       	ror	r20

00000946 <__fp_splitA>:
 946:	88 0f       	add	r24, r24
 948:	97 fb       	bst	r25, 7
 94a:	99 1f       	adc	r25, r25
 94c:	61 f0       	breq	.+24     	; 0x966 <.L6^B1>
 94e:	9f 3f       	cpi	r25, 0xFF	; 255
 950:	79 f0       	breq	.+30     	; 0x970 <.L7^B1>

00000952 <.L3^B1>:
 952:	87 95       	ror	r24
 954:	08 95       	ret

00000956 <.L4^B1>:
 956:	12 16       	cp	r1, r18
 958:	13 06       	cpc	r1, r19
 95a:	14 06       	cpc	r1, r20
 95c:	55 1f       	adc	r21, r21
 95e:	f2 cf       	rjmp	.-28     	; 0x944 <.L1^B1>

00000960 <.L5^B1>:
 960:	46 95       	lsr	r20
 962:	f1 df       	rcall	.-30     	; 0x946 <__fp_splitA>
 964:	08 c0       	rjmp	.+16     	; 0x976 <.L8^B1>

00000966 <.L6^B1>:
 966:	16 16       	cp	r1, r22
 968:	17 06       	cpc	r1, r23
 96a:	18 06       	cpc	r1, r24
 96c:	99 1f       	adc	r25, r25
 96e:	f1 cf       	rjmp	.-30     	; 0x952 <.L3^B1>

00000970 <.L7^B1>:
 970:	86 95       	lsr	r24
 972:	71 05       	cpc	r23, r1
 974:	61 05       	cpc	r22, r1

00000976 <.L8^B1>:
 976:	08 94       	sec
 978:	08 95       	ret

0000097a <__fp_zero>:
 97a:	e8 94       	clt

0000097c <__fp_szero>:
 97c:	bb 27       	eor	r27, r27
 97e:	66 27       	eor	r22, r22
 980:	77 27       	eor	r23, r23
 982:	cb 01       	movw	r24, r22
 984:	97 f9       	bld	r25, 7
 986:	08 95       	ret

00000988 <__mulsf3>:
 988:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__mulsf3x>
 98c:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__fp_round>

00000990 <.L^B1>:
 990:	0e 94 3a 05 	call	0xa74	; 0xa74 <__fp_pscA>
 994:	38 f0       	brcs	.+14     	; 0x9a4 <.L1^B1>
 996:	0e 94 41 05 	call	0xa82	; 0xa82 <__fp_pscB>
 99a:	20 f0       	brcs	.+8      	; 0x9a4 <.L1^B1>
 99c:	95 23       	and	r25, r21
 99e:	11 f0       	breq	.+4      	; 0x9a4 <.L1^B1>
 9a0:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_inf>

000009a4 <.L1^B1>:
 9a4:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_nan>

000009a8 <.L2^B1>:
 9a8:	11 24       	eor	r1, r1
 9aa:	0c 94 be 04 	jmp	0x97c	; 0x97c <__fp_szero>

000009ae <__mulsf3x>:
 9ae:	0e 94 9b 04 	call	0x936	; 0x936 <__fp_split3>
 9b2:	70 f3       	brcs	.-36     	; 0x990 <.L^B1>

000009b4 <__mulsf3_pse>:
 9b4:	95 9f       	mul	r25, r21
 9b6:	c1 f3       	breq	.-16     	; 0x9a8 <.L2^B1>
 9b8:	95 0f       	add	r25, r21
 9ba:	50 e0       	ldi	r21, 0x00	; 0
 9bc:	55 1f       	adc	r21, r21
 9be:	62 9f       	mul	r22, r18
 9c0:	f0 01       	movw	r30, r0
 9c2:	72 9f       	mul	r23, r18
 9c4:	bb 27       	eor	r27, r27
 9c6:	f0 0d       	add	r31, r0
 9c8:	b1 1d       	adc	r27, r1
 9ca:	63 9f       	mul	r22, r19
 9cc:	aa 27       	eor	r26, r26
 9ce:	f0 0d       	add	r31, r0
 9d0:	b1 1d       	adc	r27, r1
 9d2:	aa 1f       	adc	r26, r26
 9d4:	64 9f       	mul	r22, r20
 9d6:	66 27       	eor	r22, r22
 9d8:	b0 0d       	add	r27, r0
 9da:	a1 1d       	adc	r26, r1
 9dc:	66 1f       	adc	r22, r22
 9de:	82 9f       	mul	r24, r18
 9e0:	22 27       	eor	r18, r18
 9e2:	b0 0d       	add	r27, r0
 9e4:	a1 1d       	adc	r26, r1
 9e6:	62 1f       	adc	r22, r18
 9e8:	73 9f       	mul	r23, r19
 9ea:	b0 0d       	add	r27, r0
 9ec:	a1 1d       	adc	r26, r1
 9ee:	62 1f       	adc	r22, r18
 9f0:	83 9f       	mul	r24, r19
 9f2:	a0 0d       	add	r26, r0
 9f4:	61 1d       	adc	r22, r1
 9f6:	22 1f       	adc	r18, r18
 9f8:	74 9f       	mul	r23, r20
 9fa:	33 27       	eor	r19, r19
 9fc:	a0 0d       	add	r26, r0
 9fe:	61 1d       	adc	r22, r1
 a00:	23 1f       	adc	r18, r19
 a02:	84 9f       	mul	r24, r20
 a04:	60 0d       	add	r22, r0
 a06:	21 1d       	adc	r18, r1
 a08:	82 2f       	mov	r24, r18
 a0a:	76 2f       	mov	r23, r22
 a0c:	6a 2f       	mov	r22, r26
 a0e:	11 24       	eor	r1, r1
 a10:	9f 57       	subi	r25, 0x7F	; 127
 a12:	50 40       	sbci	r21, 0x00	; 0
 a14:	9a f0       	brmi	.+38     	; 0xa3c <.L13^B1>
 a16:	f1 f0       	breq	.+60     	; 0xa54 <.L15^B1>

00000a18 <.L10^B1>:
 a18:	88 23       	and	r24, r24
 a1a:	4a f0       	brmi	.+18     	; 0xa2e <.L11^B1>
 a1c:	ee 0f       	add	r30, r30
 a1e:	ff 1f       	adc	r31, r31
 a20:	bb 1f       	adc	r27, r27
 a22:	66 1f       	adc	r22, r22
 a24:	77 1f       	adc	r23, r23
 a26:	88 1f       	adc	r24, r24
 a28:	91 50       	subi	r25, 0x01	; 1
 a2a:	50 40       	sbci	r21, 0x00	; 0
 a2c:	a9 f7       	brne	.-22     	; 0xa18 <.L10^B1>

00000a2e <.L11^B1>:
 a2e:	9e 3f       	cpi	r25, 0xFE	; 254
 a30:	51 05       	cpc	r21, r1
 a32:	80 f0       	brcs	.+32     	; 0xa54 <.L15^B1>
 a34:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_inf>

00000a38 <.L12^B1>:
 a38:	0c 94 be 04 	jmp	0x97c	; 0x97c <__fp_szero>

00000a3c <.L13^B1>:
 a3c:	5f 3f       	cpi	r21, 0xFF	; 255
 a3e:	e4 f3       	brlt	.-8      	; 0xa38 <.L12^B1>
 a40:	98 3e       	cpi	r25, 0xE8	; 232
 a42:	d4 f3       	brlt	.-12     	; 0xa38 <.L12^B1>

00000a44 <.L14^B1>:
 a44:	86 95       	lsr	r24
 a46:	77 95       	ror	r23
 a48:	67 95       	ror	r22
 a4a:	b7 95       	ror	r27
 a4c:	f7 95       	ror	r31
 a4e:	e7 95       	ror	r30
 a50:	9f 5f       	subi	r25, 0xFF	; 255
 a52:	c1 f7       	brne	.-16     	; 0xa44 <.L14^B1>

00000a54 <.L15^B1>:
 a54:	fe 2b       	or	r31, r30
 a56:	88 0f       	add	r24, r24
 a58:	91 1d       	adc	r25, r1
 a5a:	96 95       	lsr	r25
 a5c:	87 95       	ror	r24
 a5e:	97 f9       	bld	r25, 7
 a60:	08 95       	ret

00000a62 <__fp_inf>:
 a62:	97 f9       	bld	r25, 7
 a64:	9f 67       	ori	r25, 0x7F	; 127
 a66:	80 e8       	ldi	r24, 0x80	; 128
 a68:	70 e0       	ldi	r23, 0x00	; 0
 a6a:	60 e0       	ldi	r22, 0x00	; 0
 a6c:	08 95       	ret

00000a6e <__fp_nan>:
 a6e:	9f ef       	ldi	r25, 0xFF	; 255
 a70:	80 ec       	ldi	r24, 0xC0	; 192
 a72:	08 95       	ret

00000a74 <__fp_pscA>:
 a74:	00 24       	eor	r0, r0
 a76:	0a 94       	dec	r0
 a78:	16 16       	cp	r1, r22
 a7a:	17 06       	cpc	r1, r23
 a7c:	18 06       	cpc	r1, r24
 a7e:	09 06       	cpc	r0, r25
 a80:	08 95       	ret

00000a82 <__fp_pscB>:
 a82:	00 24       	eor	r0, r0
 a84:	0a 94       	dec	r0
 a86:	12 16       	cp	r1, r18
 a88:	13 06       	cpc	r1, r19
 a8a:	14 06       	cpc	r1, r20
 a8c:	05 06       	cpc	r0, r21
 a8e:	08 95       	ret

00000a90 <__fp_round>:
 a90:	09 2e       	mov	r0, r25
 a92:	03 94       	inc	r0
 a94:	00 0c       	add	r0, r0
 a96:	11 f4       	brne	.+4      	; 0xa9c <.L1^B1>
 a98:	88 23       	and	r24, r24
 a9a:	52 f0       	brmi	.+20     	; 0xab0 <.L3^B1>

00000a9c <.L1^B1>:
 a9c:	bb 0f       	add	r27, r27
 a9e:	40 f4       	brcc	.+16     	; 0xab0 <.L3^B1>
 aa0:	bf 2b       	or	r27, r31
 aa2:	11 f4       	brne	.+4      	; 0xaa8 <.L2^B1>
 aa4:	60 ff       	sbrs	r22, 0
 aa6:	04 c0       	rjmp	.+8      	; 0xab0 <.L3^B1>

00000aa8 <.L2^B1>:
 aa8:	6f 5f       	subi	r22, 0xFF	; 255
 aaa:	7f 4f       	sbci	r23, 0xFF	; 255
 aac:	8f 4f       	sbci	r24, 0xFF	; 255
 aae:	9f 4f       	sbci	r25, 0xFF	; 255

00000ab0 <.L3^B1>:
 ab0:	08 95       	ret

00000ab2 <_exit>:
 ab2:	f8 94       	cli

00000ab4 <__stop_program>:
 ab4:	ff cf       	rjmp	.-2      	; 0xab4 <__stop_program>
